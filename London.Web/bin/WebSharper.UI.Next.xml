<?xml version="1.0" encoding="utf-8"?>
<doc>
<assembly><name>WebSharper.UI.Next</name></assembly>
<members>
<member name="P:WebSharper.UI.Next.Anim.Empty">
<summary>
 Do-nothing animation.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Anim.WhenDone(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit},WebSharper.UI.Next.Anim)">
<summary>
 Attach a finalizer action to an animation.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Anim.Simple``1(WebSharper.UI.Next.Interpolation{``0},WebSharper.UI.Next.Easing,System.Double,``0,``0)">
<summary>
 A simple interpolating animation using given easing and duration.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Anim.Play(WebSharper.UI.Next.Anim)">
<summary>
 Plays the animations.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Anim.Pack(WebSharper.UI.Next.Anim{Microsoft.FSharp.Core.Unit})">
<summary>
 Constructs a singleton animation set.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Anim.Map``2(Microsoft.FSharp.Core.FSharpFunc{``0,``1},WebSharper.UI.Next.Anim{``0})">
<summary>
 Maps over an animation.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Anim.Delayed``1(WebSharper.UI.Next.Interpolation{``0},WebSharper.UI.Next.Easing,System.Double,System.Double,``0,``0)">
<summary>
 A simple interpolating animation using given easing and duration, delayed by the given time.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Anim.Concat(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Anim})">
<summary>
 Combining many animations.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Anim.Append(WebSharper.UI.Next.Anim,WebSharper.UI.Next.Anim)">
<summary>
 Combining two animations.
</summary>
</member>
<member name="T:WebSharper.UI.Next.Anim">
<summary>
 Represents a combination of animations.
</summary>
</member>
<member name="P:WebSharper.UI.Next.Anim`1.Duration">
<summary>
 Duration in milliseconds.
</summary>
</member>
<member name="P:WebSharper.UI.Next.Anim`1.Compute">
<summary>
 Compute the value at a given normalized time.
</summary>
</member>
<member name="T:WebSharper.UI.Next.Anim`1">
<summary>
 An animation of a given value, defined by duration and a time-function.
</summary>
</member>
<member name="T:WebSharper.UI.Next.AppendList`1">
<summary>
 A list that does not punish too much for appending.
</summary>
</member>
<member name="P:WebSharper.UI.Next.Attr.Empty">
<summary>
 Empty attribute list.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Attr.StringConcat(System.String[])">
<summary>
 Helper for Type Provider
</summary>
</member>
<member name="M:WebSharper.UI.Next.Attr.Handler``1(System.String,Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Sets an event handler, for a given event such as `click`.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Attr.CreateU(System.String,System.String)">
<summary>
 Same as Create, uncurried for Type Provider use
</summary>
</member>
<member name="M:WebSharper.UI.Next.Attr.Create(System.String,System.String)">
<summary>
 Sets a basic DOM attribute, such as `id` to a text value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Attr.Concat(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr})">
<summary>
 Concatenation on attributes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Attr.Append(WebSharper.UI.Next.Attr,WebSharper.UI.Next.Attr)">
<summary>
 Append on attributes.
</summary>
</member>
<member name="T:WebSharper.UI.Next.Attr">
<summary>
 A potentially time-varying or animated attribute list.
</summary>
</member>
<member name="P:WebSharper.UI.Next.Doc.Empty">
<summary>
 Empty tree.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Doc.Verbatim(System.String)">
<summary>
 Verbatim HTML.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Doc.TextNode(System.String)">
<summary>
 Static variant of TextView.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Doc.SvgElement(System.String,System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Same as Element, but uses SVG namespace.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Doc.ElementU(System.String,System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Same as Element, uncurried for Type Provider use
</summary>
</member>
<member name="M:WebSharper.UI.Next.Doc.Element(System.String,System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Constructs a reactive element node.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Doc.Concat(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Concatenation.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Doc.ClientSide``1(Microsoft.FSharp.Quotations.FSharpExpr{``0})">
<summary>
 Client-side control.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Doc.Append(WebSharper.UI.Next.Doc,WebSharper.UI.Next.Doc)">
<summary>
 Append on trees.
</summary>
</member>
<member name="T:WebSharper.UI.Next.Doc">
<summary>
 Represents a time-varying node or a node list.
</summary>
</member>
<member name="P:WebSharper.UI.Next.Easing.TransformTime">
<summary>
 Transforms time coordinates, typically domain and range are both
 on the unit interval [0, 1].
</summary>
</member>
<member name="P:WebSharper.UI.Next.Easing.CubicInOut">
<summary>
 Most commonly used easing.
 let f t = 3. * (t ** 2.) - 2. * t ** 3.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Easing.Custom(Microsoft.FSharp.Core.FSharpFunc{System.Double,System.Double})">
<summary>
 Creates a custom easing.
</summary>
</member>
<member name="T:WebSharper.UI.Next.Easing">
<summary>
 Represents an easing function, a transform on NormalizedTime.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnWheel(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.WheelEvent,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;wheel&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnWaiting(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;waiting&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnVolumeChange(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;volumechange&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnVisibilityChange(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;visibilitychange&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnVersionChange(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;versionchange&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnUserProximity(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;userproximity&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnUpgradeNeeded(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;upgradeneeded&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnUpdateReady(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;updateready&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnUnload(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.UIEvent,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;unload&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnTransitionEnd(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;transitionend&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnTouchStart(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;touchstart&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnTouchMove(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;touchmove&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnTouchLeave(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;touchleave&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnTouchEnter(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;touchenter&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnTouchEnd(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;touchend&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnTouchCancel(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;touchcancel&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnTimeUpdate(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;timeupdate&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnTimeOut(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;timeout&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnSuspend(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;suspend&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnSuccess(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;success&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnSubmit(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;submit&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnStorage(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;storage&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnStalled(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;stalled&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnShow(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.MouseEvent,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;show&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnSelect(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.UIEvent,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;select&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnSeeking(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;seeking&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnSeeked(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;seeked&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnScroll(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.UIEvent,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;scroll&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnSVGZoom(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;SVGZoom&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnSVGUnload(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;SVGUnload&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnSVGScroll(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;SVGScroll&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnSVGResize(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;SVGResize&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnSVGLoad(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;SVGLoad&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnSVGError(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;SVGError&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnSVGAbort(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;SVGAbort&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnResize(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.UIEvent,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;resize&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnReset(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;reset&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnRepeatEvent(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;repeatEvent&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnReadyStateChange(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;readystatechange&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnRateChange(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;ratechange&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnProgress(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;progress&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnPopState(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;popstate&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnPointerLockError(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;pointerlockerror&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnPointerLockChange(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;pointerlockchange&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnPlaying(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;playing&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnPlay(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;play&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnPause(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;pause&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnPaste(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;paste&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnPageShow(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;pageshow&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnPageHide(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;pagehide&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnOrientationChange(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;orientationchange&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnOpen(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;open&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnOnline(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;online&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnOffline(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;offline&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnObsolete(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;obsolete&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnNoUpdate(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;noupdate&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnMouseUp(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.MouseEvent,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;mouseup&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnMouseOver(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.MouseEvent,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;mouseover&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnMouseOut(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.MouseEvent,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;mouseout&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnMouseMove(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.MouseEvent,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;mousemove&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnMouseLeave(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.MouseEvent,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;mouseleave&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnMouseEnter(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.MouseEvent,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;mouseenter&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnMouseDown(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.MouseEvent,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;mousedown&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnMessage(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;message&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnLoadedMetadata(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;loadedmetadata&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnLoadedData(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;loadeddata&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnLoadStart(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;loadstart&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnLoadEnd(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;loadend&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnLoad(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.UIEvent,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;load&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnLevelChange(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;levelchange&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnLanguageChange(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;languagechange&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnKeyUp(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.KeyboardEvent,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;keyup&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnKeyPress(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.KeyboardEvent,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;keypress&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnKeyDown(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.KeyboardEvent,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;keydown&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnInvalid(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;invalid&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnInput(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;input&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnHashChange(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;hashchange&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnGamepadDisconnected(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;gamepaddisconnected&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnGamepadConnected(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;gamepadconnected&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnFullScreenError(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;fullscreenerror&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnFullScreenChange(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;fullscreenchange&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnFocus(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.FocusEvent,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;focus&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnError(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;error&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnEnded(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;ended&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnEndEvent(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;endEvent&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnEmptied(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;emptied&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnDurationChange(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;durationchange&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnDrop(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;drop&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnDragStart(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;dragstart&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnDragOver(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;dragover&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnDragLeave(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;dragleave&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnDragEnter(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;dragenter&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnDragEnd(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;dragend&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnDrag(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;drag&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnDownloading(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;downloading&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnDischargingTimeChange(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;dischargingtimechange&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnDeviceProximity(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;deviceproximity&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnDeviceOrientation(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;deviceorientation&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnDeviceMotion(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;devicemotion&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnDeviceLight(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;devicelight&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnDblClick(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.MouseEvent,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;dblclick&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnDOMSubtreeModified(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.MutationEvent,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;DOMSubtreeModified&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnDOMNodeRemovedFromDocument(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.MutationEvent,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;DOMNodeRemovedFromDocument&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnDOMNodeRemoved(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.MutationEvent,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;DOMNodeRemoved&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnDOMNodeInsertedIntoDocument(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.MutationEvent,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;DOMNodeInsertedIntoDocument&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnDOMNodeInserted(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.MutationEvent,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;DOMNodeInserted&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnDOMElementNameChanged(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;DOMElementNameChanged&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnDOMContentLoaded(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;DOMContentLoaded&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnDOMCharacterDataModified(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.MutationEvent,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;DOMCharacterDataModified&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnDOMAttributeNameChanged(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;DOMAttributeNameChanged&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnDOMAttrModified(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.MutationEvent,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;DOMAttrModified&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnDOMActivate(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.UIEvent,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;DOMActivate&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnCut(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;cut&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnCopy(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;copy&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnContextMenu(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.MouseEvent,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;contextmenu&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnCompositionUpdate(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.CompositionEvent,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;compositionupdate&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnCompositionStart(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.CompositionEvent,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;compositionstart&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnCompositionEnd(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.CompositionEvent,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;compositionend&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnComplete(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;complete&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnClose(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;close&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnClick(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.MouseEvent,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;click&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnChecking(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;checking&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnChargingTimeChange(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;chargingtimechange&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnChargingChange(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;chargingchange&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnChange(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;change&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnCanPlayThrough(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;canplaythrough&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnCanPlay(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;canplay&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnCached(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;cached&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnBlur(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.FocusEvent,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;blur&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnBlocked(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;blocked&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnBeginEvent(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;beginEvent&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnBeforeUnload(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;beforeunload&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnBeforePrint(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;beforeprint&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnAudioProcess(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;audioprocess&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnAnimationStart(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;animationstart&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnAnimationIteration(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;animationiteration&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnAnimationEnd(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;animationend&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnAfterPrint(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;afterprint&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.OnAbort(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.UIEvent,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;abort&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Elt.On``1(System.String,Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add an event handler.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="P:WebSharper.UI.Next.Flow.Do">
<summary>
 Used within computation expressions to construct a new flow.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Flow.Static(WebSharper.UI.Next.Doc)">
<summary>
 Creates a flow from a static document.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Flow.Return``1(``0)">
<summary>
 Creates a flow from the given value, with an empty rendering function.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Flow.Map``2(Microsoft.FSharp.Core.FSharpFunc{``0,``1},WebSharper.UI.Next.Flow{``0})">
<summary>
 Mapping.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Flow.Embed``1(WebSharper.UI.Next.Flow{``0})">
<summary>
 Embeds a flow into a document, ignoring the result.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Flow.Define``1(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit},WebSharper.UI.Next.Doc})">
<summary>
 Defines a flow, given a rendering function taking a continuation
 to invoke when the interaction is done.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Flow.Bind``2(WebSharper.UI.Next.Flow{``0},Microsoft.FSharp.Core.FSharpFunc{``0,WebSharper.UI.Next.Flow{``1}})">
<summary>
 Monadic composition: compose two flows, allowing the
 result of one to be used to determine future ones.
</summary>
</member>
<member name="T:WebSharper.UI.Next.Flow">
<summary>
 Flow functionality.
</summary>
</member>
<member name="T:WebSharper.UI.Next.FlowBuilder">
<summary>
 Computation expression builder for Flow.
</summary>
</member>
<member name="T:WebSharper.UI.Next.Flow`1">
<summary>
 Support for mutli-stage applications,
 where the current stage may depend on previous stages.
</summary>
</member>
<member name="P:WebSharper.UI.Next.IRef`1.Value(`0)">
<summary>
 Gets or sets the current value.
</summary>
</member>
<member name="P:WebSharper.UI.Next.IRef`1.View">
<summary>
 Gets a view that observes changes on this variable.
</summary>
</member>
<member name="P:WebSharper.UI.Next.IRef`1.Value">
<summary>
 Gets or sets the current value.
</summary>
</member>
<member name="P:WebSharper.UI.Next.IRef`1.Id">
<summary>
 Gets the unique ID associated with the variable.
</summary>
</member>
<member name="M:WebSharper.UI.Next.IRef`1.UpdateMaybe(Microsoft.FSharp.Core.FSharpFunc{`0,Microsoft.FSharp.Core.FSharpOption{`0}})">
<summary>
 Maybe updates the current value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.IRef`1.Update(Microsoft.FSharp.Core.FSharpFunc{`0,`0})">
<summary>
 Updates the current value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.IRef`1.Set(`0)">
<summary>
 Sets the current value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.IRef`1.Get">
<summary>
 Gets the current value.
</summary>
</member>
<member name="T:WebSharper.UI.Next.IRef`1">
<summary>
 An abstract time-varying variable than can be observed for changes
 by independent processes.
</summary>
</member>
<member name="P:WebSharper.UI.Next.Interpolation.Double">
<summary>
 Interpolation for doubles.
</summary>
</member>
<member name="T:WebSharper.UI.Next.Interpolation">
<summary>
 Common interpolation combinators.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Interpolation`1.Interpolate(System.Double,`0,`0)">
<summary>
 Interpolates between two values.
</summary>
</member>
<member name="T:WebSharper.UI.Next.Interpolation`1">
<summary>
 How to to interpolate between two values of a given type.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Key.Fresh">
<summary>
 Constructs a fresh key.
</summary>
</member>
<member name="T:WebSharper.UI.Next.Key">
<summary>
 Unique keys for equality.
</summary>
</member>
<member name="M:WebSharper.UI.Next.ListModel.Wrap``3(WebSharper.UI.Next.ListModel{``0,``2},Microsoft.FSharp.Core.FSharpFunc{``1,``2},Microsoft.FSharp.Core.FSharpFunc{``2,``1},Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.FSharpFunc{``2,``1}})">
 <summary>
 Creates a new ListModel of 'T that is two-way bound to an underlying ListModel of 'U
 but wraps each item with some extra data.
 </summary>
 <param name="underlying">The underlying ListModel of 'U</param>
 <param name="extract">Extract the underlying item from a wrapped item</param>
 <param name="wrap">Construct a wrapped item from an underlying item</param>
 <param name="update">Update a wrapped item's underlying data</param>
</member>
<member name="M:WebSharper.UI.Next.ListModel.View``2(WebSharper.UI.Next.ListModel{``0,``1})">
<summary>
 Views the current item sequence.
</summary>
</member>
<member name="M:WebSharper.UI.Next.ListModel.Key``2(WebSharper.UI.Next.ListModel{``0,``1})">
<summary>
 Get the key retrieval function.
</summary>
</member>
<member name="M:WebSharper.UI.Next.ListModel.FromSeq``1(System.Collections.Generic.IEnumerable{``0})">
<summary>
 Creates a new instance using intrinsic equality and in-memory storage.
</summary>
</member>
<member name="M:WebSharper.UI.Next.ListModel.CreateWithStorage``2(Microsoft.FSharp.Core.FSharpFunc{``1,``0},WebSharper.UI.Next.Storage{``1})">
<summary>
 Creates a new instance using the specified storage type.
</summary>
</member>
<member name="M:WebSharper.UI.Next.ListModel.Create``2(Microsoft.FSharp.Core.FSharpFunc{``1,``0},System.Collections.Generic.IEnumerable{``1})">
<summary>
 Creates a new instance.
</summary>
</member>
<member name="T:WebSharper.UI.Next.ListModel">
<summary>
 ListModel combinators.
</summary>
</member>
<member name="P:WebSharper.UI.Next.ListModel`2.Value(System.Collections.Generic.IEnumerable{`1})">
<summary>
 Get or set the current items.
</summary>
</member>
<member name="P:WebSharper.UI.Next.ListModel`2.View">
<summary>
 Same as ListModel.View.
</summary>
</member>
<member name="P:WebSharper.UI.Next.ListModel`2.Value">
<summary>
 Get or set the current items.
</summary>
</member>
<member name="P:WebSharper.UI.Next.ListModel`2.LengthAsView">
<summary>
 Gets a view of the number of elements in the list.
</summary>
</member>
<member name="P:WebSharper.UI.Next.ListModel`2.Length">
<summary>
 Gets the number of elements in the list.
</summary>
</member>
<member name="P:WebSharper.UI.Next.ListModel`2.Key">
<summary>
 Get the key retrieval function.
</summary>
</member>
<member name="M:WebSharper.UI.Next.ListModel`2.Wrap``1(Microsoft.FSharp.Core.FSharpFunc{``0,`1},Microsoft.FSharp.Core.FSharpFunc{`1,``0},Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{`1,``0}})">
 <summary>
 Creates a new ListModel of 'V that is two-way bound to the underlying ListModel of 'T
 but wraps each item with some extra data.
 </summary>
 <param name="extract">Extract the underlying item from a wrapped item</param>
 <param name="wrap">Construct a wrapped item from an underlying item</param>
 <param name="update">Update a wrapped item's underlying data</param>
</member>
<member name="M:WebSharper.UI.Next.ListModel`2.UpdateBy(Microsoft.FSharp.Core.FSharpFunc{`1,Microsoft.FSharp.Core.FSharpOption{`1}},`0)">
<summary>
 Updates an item with the given key with another item computed by the given function.
 If None is computed or the item to be updated is not found, nothing is done.
</summary>
</member>
<member name="M:WebSharper.UI.Next.ListModel`2.UpdateAll(Microsoft.FSharp.Core.FSharpFunc{`1,Microsoft.FSharp.Core.FSharpOption{`1}})">
<summary>
 Updates all items with new items computed by the given function.
 For items for which None is computed, nothing is done.
</summary>
</member>
<member name="M:WebSharper.UI.Next.ListModel`2.TryFindByKeyAsView(`0)">
<summary>
 Gets a view that checks if the item specified by its key is in the list.
</summary>
</member>
<member name="M:WebSharper.UI.Next.ListModel`2.TryFindByKey(`0)">
<summary>
 Checks if the item specified by its key is in the list.
</summary>
</member>
<member name="M:WebSharper.UI.Next.ListModel`2.TryFindAsView(Microsoft.FSharp.Core.FSharpFunc{`1,System.Boolean})">
<summary>
 Gets a view that finds an item in the list that satisfies the given predicate.
</summary>
</member>
<member name="M:WebSharper.UI.Next.ListModel`2.TryFind(Microsoft.FSharp.Core.FSharpFunc{`1,System.Boolean})">
<summary>
 Finds an item in the list that satisfies the given predicate.
</summary>
</member>
<member name="M:WebSharper.UI.Next.ListModel`2.Set(System.Collections.Generic.IEnumerable{`1})">
<summary>
 Updates the list with another one.
</summary>
</member>
<member name="M:WebSharper.UI.Next.ListModel`2.RemoveByKey(`0)">
<summary>
 Removes an item by its key.
</summary>
</member>
<member name="M:WebSharper.UI.Next.ListModel`2.RemoveBy(Microsoft.FSharp.Core.FSharpFunc{`1,System.Boolean})">
<summary>
 Removes an item.
</summary>
</member>
<member name="M:WebSharper.UI.Next.ListModel`2.Remove(`1)">
<summary>
 Removes an item.
</summary>
</member>
<member name="M:WebSharper.UI.Next.ListModel`2.LensInto``1(Microsoft.FSharp.Core.FSharpFunc{`1,``0},Microsoft.FSharp.Core.FSharpFunc{`1,Microsoft.FSharp.Core.FSharpFunc{``0,`1}},`0)">
<summary>
 Gets a reference to a part of an element of the list.
</summary>
</member>
<member name="M:WebSharper.UI.Next.ListModel`2.Lens(`0)">
<summary>
 Gets a reference to an element of the list.
</summary>
</member>
<member name="M:WebSharper.UI.Next.ListModel`2.Iter(Microsoft.FSharp.Core.FSharpFunc{`1,Microsoft.FSharp.Core.Unit})">
<summary>
 Applies a function to each item in the list.
</summary>
</member>
<member name="M:WebSharper.UI.Next.ListModel`2.FindByKeyAsView(`0)">
<summary>
 Gets a view that checks if the item specified by its key is in the list.
</summary>
</member>
<member name="M:WebSharper.UI.Next.ListModel`2.FindByKey(`0)">
<summary>
 Checks if the item specified by its key is in the list.
</summary>
</member>
<member name="M:WebSharper.UI.Next.ListModel`2.FindAsView(Microsoft.FSharp.Core.FSharpFunc{`1,System.Boolean})">
<summary>
 Gets a view that finds an item in the list that satisfies the given predicate.
</summary>
</member>
<member name="M:WebSharper.UI.Next.ListModel`2.Find(Microsoft.FSharp.Core.FSharpFunc{`1,System.Boolean})">
<summary>
 Finds an item in the list that satisfies the given predicate.
</summary>
</member>
<member name="M:WebSharper.UI.Next.ListModel`2.ContainsKeyAsView(`0)">
<summary>
 Gets a view that checks if the item specified by its key is in the list.
</summary>
</member>
<member name="M:WebSharper.UI.Next.ListModel`2.ContainsKey(`0)">
<summary>
 Checks if the item specified by its key is in the list.
</summary>
</member>
<member name="M:WebSharper.UI.Next.ListModel`2.Clear">
<summary>
 Removes all elements of the list.
</summary>
</member>
<member name="M:WebSharper.UI.Next.ListModel`2.Add(`1)">
<summary>
 Adds an item. If an item with the given key exists, it is replaced.
</summary>
</member>
<member name="T:WebSharper.UI.Next.ListModel`2">
<summary>
 A helper type for ResizeArray-like observable structures.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Model.View``2(WebSharper.UI.Next.Model{``0,``1})">
<summary>
 Views a model.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Model.Update``2(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit},WebSharper.UI.Next.Model{``1,``0})">
<summary>
 Imperative update on a model.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Model.Create``2(Microsoft.FSharp.Core.FSharpFunc{``0,``1},``0)">
<summary>
 Creates a mutable model based on a given object and
 a projection to an immutable view.
</summary>
</member>
<member name="T:WebSharper.UI.Next.Model">
<summary>
 Combinators for Model type.
</summary>
</member>
<member name="P:WebSharper.UI.Next.Model`2.View">
<summary>
 Same as Model.View.
</summary>
</member>
<member name="T:WebSharper.UI.Next.Model`2">
<summary>
 Helper type for coarse-grained mutable models, with
 a mutable type &apos;M and an immutable type &apos;I.
</summary>
</member>
<member name="T:WebSharper.UI.Next.NormalizedTime">
<summary>
 Normalized time typically ranges from 0.0 to 1.0, though can
 temporarily take values outside of this range.
</summary>
</member>
<member name="M:WebSharper.UI.Next.ReactiveExtensions.MapSeqCached``3(WebSharper.UI.Next.View{System.Collections.Generic.IEnumerable{``0}},Microsoft.FSharp.Core.FSharpFunc{``0,``2},Microsoft.FSharp.Core.FSharpFunc{``2,Microsoft.FSharp.Core.FSharpFunc{WebSharper.UI.Next.View{``0},``1}})">
<summary>
 An extended form of MapSeqCached where the conversion function accepts a
 reactive view.  At every step, changes to inputs identified as being
 the same object using equality are propagated via that view.
 Inputs are compared via their `key`.
</summary>
</member>
<member name="M:WebSharper.UI.Next.ReactiveExtensions.MapSeqCached``2(WebSharper.UI.Next.View{System.Collections.Generic.IEnumerable{``0}},Microsoft.FSharp.Core.FSharpFunc{WebSharper.UI.Next.View{``0},``1})">
<summary>
 An extended form of MapSeqCached where the conversion function accepts a
 reactive view.  At every step, changes to inputs identified as being
 the same object using equality are propagated via that view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.ReactiveExtensions.MapSeqCached``3(WebSharper.UI.Next.View{System.Collections.Generic.IEnumerable{``0}},Microsoft.FSharp.Core.FSharpFunc{``0,``2},Microsoft.FSharp.Core.FSharpFunc{``0,``1})">
<summary>
 Starts a process doing stateful conversion with shallow memoization.
 The process remembers inputs from the previous step, and re-uses outputs
 from the previous step when possible instead of calling the mapping function.
 Memory use is proportional to the longest sequence taken by the View.
 Inputs are compared via their `key`.
</summary>
</member>
<member name="M:WebSharper.UI.Next.ReactiveExtensions.MapSeqCached``2(WebSharper.UI.Next.View{System.Collections.Generic.IEnumerable{``0}},Microsoft.FSharp.Core.FSharpFunc{``0,``1})">
<summary>
 Starts a process doing stateful conversion with shallow memoization.
 The process remembers inputs from the previous step, and re-uses outputs
 from the previous step when possible instead of calling the mapping function.
 Memory use is proportional to the longest sequence taken by the View.
</summary>
</member>
<member name="M:WebSharper.UI.Next.ReactiveExtensions.MapCached``2(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,``1})">
<summary>
 Lift a function, doesn&apos;t call it again if the input static memberue is equal to the previous one.
</summary>
</member>
<member name="T:WebSharper.UI.Next.ReactiveExtensions">
<summary>
 More members on View.
</summary>
</member>
<member name="T:WebSharper.UI.Next.RouteId">
<summary>
 Route identifier.
</summary>
</member>
<member name="M:WebSharper.UI.Next.RouteMap.Install``1(WebSharper.UI.Next.RouteMap{``0})">
<summary>
 Installs the map globally, tying it to the
 hash-route of the current window. Call once per app.
</summary>
</member>
<member name="M:WebSharper.UI.Next.RouteMap.Create``1(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Collections.FSharpList{System.String}},Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Collections.FSharpList{System.String},``0})">
<summary>
 Creates a router.
</summary>
</member>
<member name="T:WebSharper.UI.Next.RouteMap">
<summary>
 RouteMap combinators.
</summary>
</member>
<member name="T:WebSharper.UI.Next.RouteMap`1">
<summary>
 Implements a bijection between &apos;T and a route.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Router.Route``2(WebSharper.UI.Next.RouteMap{``0},``0,Microsoft.FSharp.Core.FSharpFunc{WebSharper.UI.Next.RouteId,Microsoft.FSharp.Core.FSharpFunc{WebSharper.UI.Next.Var{``0},``1}})">
<summary>
 Defines a singleton router from a RouteMap, initial value and a handler.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Router.Prefix``1(System.String,WebSharper.UI.Next.Router{``0})">
<summary>
 Adds a hash-route prefix to the router, shifting its URLs by the prefix.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Router.Merge``1(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Router{``0}})">
<summary>
 Merges several routers. This can fail if they are not sufficiently
 disambiguated with Router.Prefix.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Router.Install``1(Microsoft.FSharp.Core.FSharpFunc{``0,WebSharper.UI.Next.RouteId},WebSharper.UI.Next.Router{``0})">
<summary>
 Installs the given router as the main router.
 This should be called once per application.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Router.Dir``1(System.String,System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Router{``0}})">
<summary>
 Constructs a prefixed &quot;directory&quot; of routers.
 Router.Dir p xs = Router.Prefix p (Router.Merge xs).
</summary>
</member>
<member name="T:WebSharper.UI.Next.Router">
<summary>
 Router combinators.
</summary>
</member>
<member name="T:WebSharper.UI.Next.Router`1">
<summary>
 Composable router or site part.  Has the ability to parse
 URL hashes, dispatch to appropriate handler, as well as
 generate URL hashes representing a particular location.
</summary>
</member>
<member name="T:WebSharper.UI.Next.Snap`1">
<summary>
 Represents an observable snapshot of a value.
</summary>
</member>
<member name="T:WebSharper.UI.Next.Storage`1">
<summary>
 Basic store interface. ListModel uses this for operating on the backing array.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Submitter.View``1(WebSharper.UI.Next.Submitter{``0})">
<summary>
 Get the output view of a submitter.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Submitter.Trigger``1(WebSharper.UI.Next.Submitter{``0})">
<summary>
 Trigger a submitter, ie. cause its output view
 to get the same value as its input view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Submitter.Input``1(WebSharper.UI.Next.Submitter{``0})">
<summary>
 Get the input view of a submitter.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Submitter.CreateOption``1(WebSharper.UI.Next.View{``0})">
<summary>
 Create a Submitter from the given input view.
 Initially, the output view has the value None,
 until the Submitter is triggered for the first time.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Submitter.Create``1(WebSharper.UI.Next.View{``0},``0)">
<summary>
 Create a Submitter from the given input view.
 Initially, the output view has the value init,
 until the Submitter is triggered for the first time.
</summary>
</member>
<member name="T:WebSharper.UI.Next.Submitter">
<summary>
 A special type of View whose value is only updated when Trigger is called.
</summary>
</member>
<member name="P:WebSharper.UI.Next.Submitter`1.View">
<summary>
 Get the output view of the submitter.
</summary>
</member>
<member name="P:WebSharper.UI.Next.Submitter`1.Input">
<summary>
 Get the input view of the submitter.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Submitter`1.Trigger">
<summary>
 Trigger the submitter, ie. cause its output view
 to get the same value as its input view.
</summary>
</member>
<member name="T:WebSharper.UI.Next.Submitter`1">
<summary>
 A special type of View whose value is only updated when Trigger is called.
</summary>
</member>
<member name="T:WebSharper.UI.Next.Time">
<summary>
 Time duration in milliseconds.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Trans.Trivial``1">
<summary>
 Creates a trivial transition that does not animate anything.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Trans.Exit``1(Microsoft.FSharp.Core.FSharpFunc{``0,WebSharper.UI.Next.Anim{``0}},WebSharper.UI.Next.Trans{``0})">
<summary>
 Updates the enter animation.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Trans.Enter``1(Microsoft.FSharp.Core.FSharpFunc{``0,WebSharper.UI.Next.Anim{``0}},WebSharper.UI.Next.Trans{``0})">
<summary>
 Updates the enter animation.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Trans.Create``1(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``0,WebSharper.UI.Next.Anim{``0}}})">
<summary>
 Creates a simple transition that animates change.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Trans.Change``1(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``0,WebSharper.UI.Next.Anim{``0}}},WebSharper.UI.Next.Trans{``0})">
<summary>
 Updates the change animation.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Trans.CanAnimateExit``1(WebSharper.UI.Next.Trans{``0})">
<summary>
 Whether AnimateExit results are non-trivial.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Trans.CanAnimateEnter``1(WebSharper.UI.Next.Trans{``0})">
<summary>
 Whether AnimateEnter results are non-trivial.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Trans.CanAnimateChange``1(WebSharper.UI.Next.Trans{``0})">
<summary>
 Whether AnimateChange results are non-trivial.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Trans.AnimateExit``1(WebSharper.UI.Next.Trans{``0},``0)">
<summary>
 Animates removing an object - from a given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Trans.AnimateEnter``1(WebSharper.UI.Next.Trans{``0},``0)">
<summary>
 Animates adding an object - towards a given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Trans.AnimateChange``1(WebSharper.UI.Next.Trans{``0},``0,``0)">
<summary>
 Animates a change in an object, between values.
</summary>
</member>
<member name="T:WebSharper.UI.Next.Trans">
<summary>
 Combinators on transitions.
</summary>
</member>
<member name="T:WebSharper.UI.Next.Trans`1">
<summary>
 Defines animations for changing, adding and removing a value.
</summary>
</member>
<member name="T:WebSharper.UI.Next.Trie`2">
<summary>
 Represents a trie from key to value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Var.Update``1(WebSharper.UI.Next.Var{``0},Microsoft.FSharp.Core.FSharpFunc{``0,``0})">
<summary>
 Updates the current value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Var.SetFinal``1(WebSharper.UI.Next.Var{``0},``0)">
<summary>
 Sets the final value (after this, Set/Update are invalid).
 This is rarely needed, but can help solve memory leaks when
 mutliple views are scheduled to wait on a variable that is never
 going to change again.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Var.Set``1(WebSharper.UI.Next.Var{``0},``0)">
<summary>
 Sets the current value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Var.Lens``2(WebSharper.UI.Next.IRef{``0},Microsoft.FSharp.Core.FSharpFunc{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,``0}})">
<summary>
 Gets a reference to part of a var&apos;s value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Var.GetId``1(WebSharper.UI.Next.Var{``0})">
<summary>
 Gets the unique ID associated with the var.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Var.Get``1(WebSharper.UI.Next.Var{``0})">
<summary>
 Obtains the current value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Var.Create``1(``0)">
<summary>
 Creates a fresh variable with the given initial value.
</summary>
</member>
<member name="T:WebSharper.UI.Next.Var">
<summary>
 Static operations on variables.
</summary>
</member>
<member name="P:WebSharper.UI.Next.Var`1.Value(`0)">
<summary>
 Gets or sets the current value.
</summary>
</member>
<member name="P:WebSharper.UI.Next.Var`1.View">
<summary>
 The corresponding view.
</summary>
</member>
<member name="P:WebSharper.UI.Next.Var`1.Value">
<summary>
 Gets or sets the current value.
</summary>
</member>
<member name="T:WebSharper.UI.Next.Var`1">
<summary>
 A time-varying variable that behaves like a ref cell that
 can also be observed for changes by independent processes.
</summary>
</member>
<member name="P:WebSharper.UI.Next.View.Do">
<summary>
 An instance of ViewBuilder.
</summary>
</member>
<member name="M:WebSharper.UI.Next.View.UpdateWhile``1(``0,WebSharper.UI.Next.View{System.Boolean},WebSharper.UI.Next.View{``0})">
<summary>
 Only keeps the latest value of the second view when the predicate is true
</summary>
</member>
<member name="M:WebSharper.UI.Next.View.SnapshotOn``2(``0,WebSharper.UI.Next.View{``1},WebSharper.UI.Next.View{``0})">
<summary>
 Snapshots the second view whenever the first updates
</summary>
</member>
<member name="M:WebSharper.UI.Next.View.Sink``1(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit},WebSharper.UI.Next.View{``0})">
<summary>
 Calls the given sink function repeatedly with the latest view value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.View.Sequence``1(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.View{``0}})">
<summary>
 Evaluate each action and collect the results
</summary>
</member>
<member name="M:WebSharper.UI.Next.View.MapSeqCachedViewBy``3(Microsoft.FSharp.Core.FSharpFunc{``0,``2},Microsoft.FSharp.Core.FSharpFunc{``2,Microsoft.FSharp.Core.FSharpFunc{WebSharper.UI.Next.View{``0},``1}},WebSharper.UI.Next.View{System.Collections.Generic.IEnumerable{``0}})">
<summary>
 An extended form of MapSeqCached where the conversion function accepts a
 reactive view.  At every step, changes to inputs identified as being
 the same object using equality are propagated via that view.
 Inputs are compared via their `key`.
</summary>
</member>
<member name="M:WebSharper.UI.Next.View.MapSeqCachedView``2(Microsoft.FSharp.Core.FSharpFunc{WebSharper.UI.Next.View{``0},``1},WebSharper.UI.Next.View{System.Collections.Generic.IEnumerable{``0}})">
<summary>
 An extended form of MapSeqCached where the conversion function accepts a
 reactive view.  At every step, changes to inputs identified as being
 the same object using equality are propagated via that view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.View.MapSeqCachedBy``3(Microsoft.FSharp.Core.FSharpFunc{``0,``2},Microsoft.FSharp.Core.FSharpFunc{``0,``1},WebSharper.UI.Next.View{System.Collections.Generic.IEnumerable{``0}})">
<summary>
 Starts a process doing stateful conversion with shallow memoization.
 The process remembers inputs from the previous step, and re-uses outputs
 from the previous step when possible instead of calling the mapping function.
 Memory use is proportional to the longest sequence taken by the View.
 Inputs are compared via their `key`.
</summary>
</member>
<member name="M:WebSharper.UI.Next.View.MapSeqCached``2(Microsoft.FSharp.Core.FSharpFunc{``0,``1},WebSharper.UI.Next.View{System.Collections.Generic.IEnumerable{``0}})">
<summary>
 Starts a process doing stateful conversion with shallow memoization.
 The process remembers inputs from the previous step, and re-uses outputs
 from the previous step when possible instead of calling the mapping function.
 Memory use is proportional to the longest sequence taken by the View.
</summary>
</member>
<member name="M:WebSharper.UI.Next.View.MapCached``2(Microsoft.FSharp.Core.FSharpFunc{``0,``1},WebSharper.UI.Next.View{``0})">
<summary>
 Lift a function, doesn&apos;t call it again if the input value is equal to the previous one.
</summary>
</member>
<member name="M:WebSharper.UI.Next.View.MapAsync2``3(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Control.FSharpAsync{``2}}},WebSharper.UI.Next.View{``0},WebSharper.UI.Next.View{``1})">
<summary>
 Lifting async functions.
</summary>
</member>
<member name="M:WebSharper.UI.Next.View.MapAsync``2(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Control.FSharpAsync{``1}},WebSharper.UI.Next.View{``0})">
<summary>
 Lifting async functions.
</summary>
</member>
<member name="M:WebSharper.UI.Next.View.Map2``3(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,``2}},WebSharper.UI.Next.View{``0},WebSharper.UI.Next.View{``1})">
<summary>
 Static composition.
</summary>
</member>
<member name="M:WebSharper.UI.Next.View.Map``2(Microsoft.FSharp.Core.FSharpFunc{``0,``1},WebSharper.UI.Next.View{``0})">
<summary>
 Lifting functions.
</summary>
</member>
<member name="M:WebSharper.UI.Next.View.Join``1(WebSharper.UI.Next.View{WebSharper.UI.Next.View{``0}})">
<summary>
 Dynamic composition.
</summary>
</member>
<member name="M:WebSharper.UI.Next.View.FromVar``1(WebSharper.UI.Next.Var{``0})">
<summary>
 Creation from a Var.
</summary>
</member>
<member name="M:WebSharper.UI.Next.View.ConstAsync``1(Microsoft.FSharp.Control.FSharpAsync{``0})">
<summary>
 Creates a view that awaits the given asynchronous task and
 gets its value, after which it does not vary.
</summary>
</member>
<member name="M:WebSharper.UI.Next.View.Const``1(``0)">
<summary>
 Creates a view that does not vary.
</summary>
</member>
<member name="M:WebSharper.UI.Next.View.Bind``2(Microsoft.FSharp.Core.FSharpFunc{``0,WebSharper.UI.Next.View{``1}},WebSharper.UI.Next.View{``0})">
<summary>
 Dynamic composition.
</summary>
</member>
<member name="M:WebSharper.UI.Next.View.Apply``2(WebSharper.UI.Next.View{Microsoft.FSharp.Core.FSharpFunc{``0,``1}},WebSharper.UI.Next.View{``0})">
<summary>
 Static composition.
</summary>
</member>
<member name="T:WebSharper.UI.Next.View">
<summary>
 Static operations on views.
</summary>
</member>
<member name="M:WebSharper.UI.Next.ViewBuilder.Return``1(``0)">
<summary>
 Same as View.Const.
</summary>
</member>
<member name="M:WebSharper.UI.Next.ViewBuilder.Bind``2(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,WebSharper.UI.Next.View{``1}})">
<summary>
 Same as View.Bind.
</summary>
</member>
<member name="T:WebSharper.UI.Next.ViewBuilder">
<summary>
 Computation expression builder for views.
</summary>
</member>
<member name="M:WebSharper.UI.Next.View`1.UpdateWhile(`0,WebSharper.UI.Next.View{System.Boolean})">
<summary>
 Only keeps the latest value of the second view when the predicate is true
</summary>
</member>
<member name="M:WebSharper.UI.Next.View`1.SnapshotOn``1(`0,WebSharper.UI.Next.View{``0})">
<summary>
 Snapshots the second view whenever the first updates
</summary>
</member>
<member name="M:WebSharper.UI.Next.View`1.MapAsync``1(Microsoft.FSharp.Core.FSharpFunc{`0,Microsoft.FSharp.Control.FSharpAsync{``0}})">
<summary>
 Lifting async functions.
</summary>
</member>
<member name="M:WebSharper.UI.Next.View`1.Map``1(Microsoft.FSharp.Core.FSharpFunc{`0,``0})">
<summary>
 Lifting functions.
</summary>
</member>
<member name="M:WebSharper.UI.Next.View`1.Bind``1(Microsoft.FSharp.Core.FSharpFunc{`0,WebSharper.UI.Next.View{``0}})">
<summary>
 Dynamic composition.
</summary>
</member>
<member name="T:WebSharper.UI.Next.View`1">
<summary>
 A read-only view on a time-varying value that a can be observed.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Abbrev.Mailbox.StartProcessor``1(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Control.FSharpAsync{Microsoft.FSharp.Core.Unit}})">
<summary>
 Simplified MailboxProcessor implementation.
</summary>
</member>
<member name="T:WebSharper.UI.Next.Abbrev">
<summary>
 Abbreviations and small utilities for this assembly.
</summary>
</member>
<member name="T:WebSharper.UI.Next.AppendList.T`1">
<summary>
 The type synonym.
</summary>
</member>
<member name="M:WebSharper.UI.Next.AppendList.FromArray``1(``0[])">
<summary>
 Constructs from an array.
</summary>
</member>
<member name="M:WebSharper.UI.Next.AppendList.ToArray``1(WebSharper.UI.Next.AppendList{``0})">
<summary>
 Flattens to an array.
</summary>
</member>
<member name="M:WebSharper.UI.Next.AppendList.Single``1(``0)">
<summary>
 Constructs a singleton list.
</summary>
</member>
<member name="M:WebSharper.UI.Next.AppendList.Concat``1(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.AppendList{``0}})">
<summary>
 Concatenates many lists.
</summary>
</member>
<member name="M:WebSharper.UI.Next.AppendList.Append``1(WebSharper.UI.Next.AppendList{``0},WebSharper.UI.Next.AppendList{``0})">
<summary>
 Appends two lists.
</summary>
</member>
<member name="M:WebSharper.UI.Next.AppendList.Empty``1">
<summary>
 The empty list.
</summary>
</member>
<member name="T:WebSharper.UI.Next.AppendList">
<summary>
 Operations on append-lists.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.SetValue(WebSharper.UI.Next.Elt,System.String)">
<summary>
 Set the element&apos;s current value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.SetText(WebSharper.UI.Next.Elt,System.String)">
<summary>
 Set the element&apos;s text content.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.SetStyle(WebSharper.UI.Next.Elt,System.String,System.String)">
<summary>
 Sets an inline style.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.SetProperty``1(WebSharper.UI.Next.Elt,System.String,``0)">
<summary>
 Set the given property&apos;s value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.SetAttribute(WebSharper.UI.Next.Elt,System.String,System.String)">
<summary>
 Set the given attribute&apos;s value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.RunById(WebSharper.UI.Next.Doc,System.String)">
<summary>
 Same as Run, but looks up the element by ID.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.Run(WebSharper.UI.Next.Doc,WebSharper.JavaScript.Dom.Element)">
<summary>
 Runs a reactive Doc as contents of the given element.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.RemoveClass(WebSharper.UI.Next.Elt,System.String)">
<summary>
 Remove a CSS class from the element.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.RemoveAttribute(WebSharper.UI.Next.Elt,System.String)">
<summary>
 Unsets the given attribute.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.Prepend(WebSharper.UI.Next.Elt,WebSharper.UI.Next.Doc)">
<summary>
 Add the given doc as first child(ren) of this element.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnWheelView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.WheelEvent,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;wheel&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnWheel(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.WheelEvent,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;wheel&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnWaitingView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;waiting&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnWaiting(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;waiting&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnVolumeChangeView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;volumechange&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnVolumeChange(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;volumechange&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnVisibilityChangeView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;visibilitychange&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnVisibilityChange(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;visibilitychange&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnVersionChangeView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;versionchange&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnVersionChange(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;versionchange&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnUserProximityView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;userproximity&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnUserProximity(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;userproximity&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnUpgradeNeededView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;upgradeneeded&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnUpgradeNeeded(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;upgradeneeded&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnUpdateReadyView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;updateready&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnUpdateReady(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;updateready&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnUnloadView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.UIEvent,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;unload&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnUnload(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.UIEvent,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;unload&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnTransitionEndView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;transitionend&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnTransitionEnd(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;transitionend&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnTouchStartView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;touchstart&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnTouchStart(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;touchstart&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnTouchMoveView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;touchmove&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnTouchMove(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;touchmove&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnTouchLeaveView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;touchleave&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnTouchLeave(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;touchleave&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnTouchEnterView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;touchenter&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnTouchEnter(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;touchenter&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnTouchEndView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;touchend&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnTouchEnd(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;touchend&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnTouchCancelView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;touchcancel&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnTouchCancel(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;touchcancel&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnTimeUpdateView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;timeupdate&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnTimeUpdate(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;timeupdate&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnTimeOutView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;timeout&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnTimeOut(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;timeout&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnSuspendView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;suspend&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnSuspend(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;suspend&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnSuccessView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;success&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnSuccess(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;success&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnSubmitView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;submit&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnSubmit(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;submit&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnStorageView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;storage&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnStorage(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;storage&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnStalledView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;stalled&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnStalled(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;stalled&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnShowView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.MouseEvent,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;show&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnShow(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.MouseEvent,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;show&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnSelectView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.UIEvent,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;select&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnSelect(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.UIEvent,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;select&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnSeekingView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;seeking&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnSeeking(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;seeking&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnSeekedView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;seeked&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnSeeked(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;seeked&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnScrollView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.UIEvent,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;scroll&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnScroll(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.UIEvent,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;scroll&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnSVGZoomView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;SVGZoom&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnSVGZoom(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;SVGZoom&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnSVGUnloadView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;SVGUnload&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnSVGUnload(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;SVGUnload&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnSVGScrollView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;SVGScroll&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnSVGScroll(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;SVGScroll&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnSVGResizeView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;SVGResize&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnSVGResize(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;SVGResize&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnSVGLoadView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;SVGLoad&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnSVGLoad(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;SVGLoad&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnSVGErrorView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;SVGError&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnSVGError(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;SVGError&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnSVGAbortView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;SVGAbort&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnSVGAbort(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;SVGAbort&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnResizeView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.UIEvent,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;resize&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnResize(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.UIEvent,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;resize&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnResetView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;reset&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnReset(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;reset&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnRepeatEventView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;repeatEvent&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnRepeatEvent(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;repeatEvent&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnReadyStateChangeView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;readystatechange&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnReadyStateChange(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;readystatechange&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnRateChangeView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;ratechange&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnRateChange(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;ratechange&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnProgressView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;progress&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnProgress(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;progress&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnPopStateView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;popstate&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnPopState(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;popstate&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnPointerLockErrorView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;pointerlockerror&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnPointerLockError(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;pointerlockerror&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnPointerLockChangeView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;pointerlockchange&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnPointerLockChange(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;pointerlockchange&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnPlayingView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;playing&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnPlaying(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;playing&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnPlayView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;play&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnPlay(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;play&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnPauseView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;pause&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnPause(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;pause&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnPasteView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;paste&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnPaste(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;paste&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnPageShowView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;pageshow&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnPageShow(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;pageshow&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnPageHideView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;pagehide&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnPageHide(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;pagehide&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnOrientationChangeView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;orientationchange&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnOrientationChange(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;orientationchange&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnOpenView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;open&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnOpen(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;open&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnOnlineView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;online&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnOnline(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;online&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnOfflineView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;offline&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnOffline(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;offline&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnObsoleteView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;obsolete&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnObsolete(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;obsolete&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnNoUpdateView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;noupdate&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnNoUpdate(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;noupdate&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnMouseUpView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.MouseEvent,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;mouseup&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnMouseUp(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.MouseEvent,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;mouseup&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnMouseOverView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.MouseEvent,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;mouseover&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnMouseOver(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.MouseEvent,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;mouseover&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnMouseOutView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.MouseEvent,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;mouseout&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnMouseOut(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.MouseEvent,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;mouseout&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnMouseMoveView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.MouseEvent,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;mousemove&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnMouseMove(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.MouseEvent,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;mousemove&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnMouseLeaveView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.MouseEvent,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;mouseleave&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnMouseLeave(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.MouseEvent,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;mouseleave&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnMouseEnterView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.MouseEvent,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;mouseenter&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnMouseEnter(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.MouseEvent,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;mouseenter&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnMouseDownView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.MouseEvent,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;mousedown&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnMouseDown(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.MouseEvent,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;mousedown&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnMessageView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;message&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnMessage(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;message&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnLoadedMetadataView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;loadedmetadata&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnLoadedMetadata(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;loadedmetadata&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnLoadedDataView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;loadeddata&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnLoadedData(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;loadeddata&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnLoadView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.UIEvent,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;load&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnLoadStartView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;loadstart&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnLoadStart(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;loadstart&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnLoadEndView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;loadend&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnLoadEnd(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;loadend&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnLoad(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.UIEvent,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;load&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnLevelChangeView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;levelchange&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnLevelChange(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;levelchange&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnLanguageChangeView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;languagechange&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnLanguageChange(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;languagechange&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnKeyUpView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.KeyboardEvent,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;keyup&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnKeyUp(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.KeyboardEvent,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;keyup&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnKeyPressView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.KeyboardEvent,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;keypress&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnKeyPress(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.KeyboardEvent,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;keypress&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnKeyDownView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.KeyboardEvent,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;keydown&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnKeyDown(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.KeyboardEvent,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;keydown&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnInvalidView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;invalid&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnInvalid(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;invalid&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnInputView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;input&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnInput(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;input&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnHashChangeView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;hashchange&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnHashChange(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;hashchange&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnGamepadDisconnectedView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;gamepaddisconnected&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnGamepadDisconnected(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;gamepaddisconnected&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnGamepadConnectedView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;gamepadconnected&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnGamepadConnected(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;gamepadconnected&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnFullScreenErrorView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;fullscreenerror&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnFullScreenError(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;fullscreenerror&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnFullScreenChangeView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;fullscreenchange&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnFullScreenChange(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;fullscreenchange&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnFocusView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.FocusEvent,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;focus&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnFocus(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.FocusEvent,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;focus&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnErrorView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;error&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnError(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;error&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnEndedView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;ended&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnEnded(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;ended&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnEndEventView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;endEvent&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnEndEvent(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;endEvent&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnEmptiedView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;emptied&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnEmptied(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;emptied&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnDurationChangeView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;durationchange&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnDurationChange(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;durationchange&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnDropView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;drop&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnDrop(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;drop&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnDragView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;drag&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnDragStartView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;dragstart&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnDragStart(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;dragstart&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnDragOverView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;dragover&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnDragOver(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;dragover&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnDragLeaveView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;dragleave&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnDragLeave(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;dragleave&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnDragEnterView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;dragenter&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnDragEnter(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;dragenter&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnDragEndView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;dragend&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnDragEnd(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;dragend&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnDrag(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;drag&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnDownloadingView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;downloading&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnDownloading(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;downloading&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnDischargingTimeChangeView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;dischargingtimechange&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnDischargingTimeChange(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;dischargingtimechange&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnDeviceProximityView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;deviceproximity&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnDeviceProximity(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;deviceproximity&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnDeviceOrientationView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;deviceorientation&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnDeviceOrientation(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;deviceorientation&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnDeviceMotionView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;devicemotion&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnDeviceMotion(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;devicemotion&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnDeviceLightView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;devicelight&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnDeviceLight(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;devicelight&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnDblClickView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.MouseEvent,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;dblclick&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnDblClick(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.MouseEvent,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;dblclick&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnDOMSubtreeModifiedView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.MutationEvent,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;DOMSubtreeModified&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnDOMSubtreeModified(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.MutationEvent,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;DOMSubtreeModified&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnDOMNodeRemovedView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.MutationEvent,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;DOMNodeRemoved&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnDOMNodeRemovedFromDocumentView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.MutationEvent,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;DOMNodeRemovedFromDocument&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnDOMNodeRemovedFromDocument(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.MutationEvent,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;DOMNodeRemovedFromDocument&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnDOMNodeRemoved(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.MutationEvent,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;DOMNodeRemoved&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnDOMNodeInsertedView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.MutationEvent,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;DOMNodeInserted&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnDOMNodeInsertedIntoDocumentView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.MutationEvent,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;DOMNodeInsertedIntoDocument&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnDOMNodeInsertedIntoDocument(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.MutationEvent,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;DOMNodeInsertedIntoDocument&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnDOMNodeInserted(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.MutationEvent,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;DOMNodeInserted&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnDOMElementNameChangedView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;DOMElementNameChanged&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnDOMElementNameChanged(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;DOMElementNameChanged&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnDOMContentLoadedView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;DOMContentLoaded&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnDOMContentLoaded(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;DOMContentLoaded&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnDOMCharacterDataModifiedView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.MutationEvent,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;DOMCharacterDataModified&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnDOMCharacterDataModified(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.MutationEvent,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;DOMCharacterDataModified&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnDOMAttributeNameChangedView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;DOMAttributeNameChanged&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnDOMAttributeNameChanged(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;DOMAttributeNameChanged&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnDOMAttrModifiedView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.MutationEvent,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;DOMAttrModified&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnDOMAttrModified(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.MutationEvent,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;DOMAttrModified&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnDOMActivateView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.UIEvent,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;DOMActivate&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnDOMActivate(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.UIEvent,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;DOMActivate&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnCutView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;cut&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnCut(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;cut&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnCopyView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;copy&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnCopy(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;copy&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnContextMenuView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.MouseEvent,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;contextmenu&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnContextMenu(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.MouseEvent,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;contextmenu&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnCompositionUpdateView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.CompositionEvent,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;compositionupdate&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnCompositionUpdate(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.CompositionEvent,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;compositionupdate&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnCompositionStartView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.CompositionEvent,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;compositionstart&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnCompositionStart(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.CompositionEvent,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;compositionstart&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnCompositionEndView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.CompositionEvent,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;compositionend&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnCompositionEnd(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.CompositionEvent,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;compositionend&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnCompleteView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;complete&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnComplete(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;complete&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnCloseView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;close&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnClose(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;close&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnClickView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.MouseEvent,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;click&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnClick(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.MouseEvent,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;click&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnCheckingView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;checking&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnChecking(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;checking&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnChargingTimeChangeView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;chargingtimechange&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnChargingTimeChange(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;chargingtimechange&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnChargingChangeView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;chargingchange&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnChargingChange(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;chargingchange&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnChangeView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;change&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnChange(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;change&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnCanPlayView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;canplay&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnCanPlayThroughView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;canplaythrough&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnCanPlayThrough(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;canplaythrough&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnCanPlay(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;canplay&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnCachedView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;cached&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnCached(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;cached&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnBlurView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.FocusEvent,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;blur&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnBlur(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.FocusEvent,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;blur&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnBlockedView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;blocked&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnBlocked(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;blocked&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnBeginEventView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;beginEvent&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnBeginEvent(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;beginEvent&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnBeforeUnloadView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;beforeunload&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnBeforeUnload(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;beforeunload&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnBeforePrintView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;beforeprint&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnBeforePrint(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;beforeprint&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnAudioProcessView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;audioprocess&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnAudioProcess(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;audioprocess&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnAnimationStartView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;animationstart&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnAnimationStart(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;animationstart&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnAnimationIterationView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;animationiteration&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnAnimationIteration(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;animationiteration&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnAnimationEndView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;animationend&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnAnimationEnd(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;animationend&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnAfterRenderView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a callback to be called after the element has been inserted into the DOM,
 which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnAfterRender(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.Unit})">
<summary>
 Add a callback to be called after the element has been inserted into the DOM.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnAfterPrintView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;afterprint&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnAfterPrint(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;afterprint&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnAbortView``1(WebSharper.UI.Next.Elt,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.UIEvent,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Add a handler for the event &quot;abort&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.OnAbort(WebSharper.UI.Next.Elt,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.UIEvent,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add a handler for the event &quot;abort&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.On(WebSharper.UI.Next.Elt,System.String,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Add an event handler.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.HasClass(WebSharper.UI.Next.Elt,System.String)">
<summary>
 Checks whether the element has a CSS class.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.HasAttribute(WebSharper.UI.Next.Elt,System.String)">
<summary>
 Checks whether the element has the given attribute.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.GetValue(WebSharper.UI.Next.Elt)">
<summary>
 Get the element&apos;s current value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.GetText(WebSharper.UI.Next.Elt)">
<summary>
 Get the element&apos;s text content.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.GetProperty``1(WebSharper.UI.Next.Elt,System.String)">
<summary>
 Get the given property&apos;s value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.GetId(WebSharper.UI.Next.Elt)">
<summary>
 Get the element&apos;s id.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.GetHtml(WebSharper.UI.Next.Elt)">
<summary>
 Get the HTML string for this element in its current state.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.GetDom(WebSharper.UI.Next.Elt)">
<summary>
 Get the underlying DOM element.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.GetAttribute(WebSharper.UI.Next.Elt,System.String)">
<summary>
 Get the given attribute&apos;s value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.DocSeqCached``3(WebSharper.UI.Next.View{System.Collections.Generic.IEnumerable{``0}},Microsoft.FSharp.Core.FSharpFunc{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.FSharpFunc{WebSharper.UI.Next.View{``0},``2}})">
<summary>
 DocSeqCached with a custom key.
 Shorthand for Doc.BindSeqCachedViewBy.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.DocSeqCached``2(WebSharper.UI.Next.View{System.Collections.Generic.IEnumerable{``0}},Microsoft.FSharp.Core.FSharpFunc{WebSharper.UI.Next.View{``0},``1})">
<summary>
 Converts a collection to Doc using View.MapSeqCachedView and embeds the concatenated result.
 Shorthand for Doc.BindSeqCachedView.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.DocSeqCached``3(WebSharper.UI.Next.View{System.Collections.Generic.IEnumerable{``0}},Microsoft.FSharp.Core.FSharpFunc{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``2})">
<summary>
 DocSeqCached with a custom key.
 Shorthand for Doc.BindSeqCachedBy.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.DocSeqCached``2(WebSharper.UI.Next.View{System.Collections.Generic.IEnumerable{``0}},Microsoft.FSharp.Core.FSharpFunc{``0,``1})">
<summary>
 Converts a collection to Doc using View.MapSeqCached and embeds the concatenated result.
 Shorthand for Doc.BindSeqCached.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.Doc``2(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,``1})">
<summary>
 Embeds time-varying fragments.
 Equivalent to Doc.BindView.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.Clear(WebSharper.UI.Next.Elt)">
<summary>
 Remove all children from the element.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.Append(WebSharper.UI.Next.Elt,WebSharper.UI.Next.Doc)">
<summary>
 Add the given doc as last child(ren) of this element.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.DocExtensions.AddClass(WebSharper.UI.Next.Elt,System.String)">
<summary>
 Add a CSS class to the element.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.Attr.ValidateForm">
<summary>
 Add this attribute to any &lt;form&gt; element that contains validation
 (including Doc.IntInput and Doc.FloatInput) for compatibility in Internet Explorer 9 and older.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.Attr.Value(WebSharper.UI.Next.IRef{System.String})">
<summary>
 Gets and sets the value of the element according to a Var.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.Attr.ContentEditableHtml(WebSharper.UI.Next.IRef{System.String})">
<summary>
 Make the element&apos;s content editable and bind its HTML content to a Var.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.Attr.ContentEditableText(WebSharper.UI.Next.IRef{System.String})">
<summary>
 Make the element&apos;s content editable and bind its text content to a Var.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.Attr.CustomVar``1(WebSharper.UI.Next.IRef{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpOption{``0}})">
<summary>
 Gets and sets custom properties on the element according to a Var.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.Attr.CustomValue``1(WebSharper.UI.Next.IRef{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},Microsoft.FSharp.Core.FSharpFunc{System.String,Microsoft.FSharp.Core.FSharpOption{``0}})">
<summary>
 Gets and sets the value of the element according to a Var.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.Attr.DynamicPred(System.String,WebSharper.UI.Next.View{System.Boolean},WebSharper.UI.Next.View{System.String})">
<summary>
 Sets an attribute when a view satisfies a predicate.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.Attr.DynamicClass``1(System.String,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean})">
<summary>
 Sets a CSS class when the given view satisfies a predicate.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.Attr.Class(System.String)">
<summary>
 Sets a CSS class.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.Attr.OnAfterRenderView``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}})">
<summary>
 Adds a callback to be called after the element has been inserted in the DOM,
 which also receives the value of a view at the time of the event.
 The callback is guaranteed to be called only once, even if the element is moved or removed and reinserted.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.Attr.OnAfterRender(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.Unit})">
<summary>
 Adds a callback to be called after the element has been inserted in the DOM.
 The callback is guaranteed to be called only once, even if the element is moved or removed and reinserted.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.Attr.HandlerView``2(System.String,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Sets an event handler, for a given event such as `click`.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.Attr.Handler``1(System.String,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}})">
<summary>
 Sets an event handler, for a given event such as `click`.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.Attr.AnimatedStyle``1(System.String,WebSharper.UI.Next.Trans{``0},WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String})">
<summary>
 Animated variant of Style.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.Attr.DynamicStyle(System.String,WebSharper.UI.Next.View{System.String})">
<summary>
 Dynamic variant of Style.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.Attr.Style(System.String,System.String)">
<summary>
 Sets a style attribute, such as `background-color`.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.Attr.Animated``1(System.String,WebSharper.UI.Next.Trans{``0},WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String})">
<summary>
 Animated variant of Create.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.Attr.DynamicCustom``1(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}},WebSharper.UI.Next.View{``0})">
<summary>
 Dynamic with a custom setter.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.Attr.DynamicProp``1(System.String,WebSharper.UI.Next.View{``0})">
<summary>
 Dynamically set a property of the DOM element.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.Attr.Dynamic(System.String,WebSharper.UI.Next.View{System.String})">
<summary>
 Dynamic variant of Create.
</summary>
</member>
<member name="T:WebSharper.UI.Next.Client.Attrs.Dyn">
<summary>
 Dynamic attributes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.Attrs.GetOnAfterRender(WebSharper.UI.Next.Client.Attrs.Dyn)">
<summary>
 Get OnAfterRender callback, if any.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.Attrs.GetExitAnim(WebSharper.UI.Next.Client.Attrs.Dyn)">
<summary>
 Animate exit transition.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.Attrs.GetEnterAnim(WebSharper.UI.Next.Client.Attrs.Dyn)">
<summary>
 Animate enter transition.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.Attrs.GetChangeAnim(WebSharper.UI.Next.Client.Attrs.Dyn)">
<summary>
 Animate a changing value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.Attrs.HasExitAnim(WebSharper.UI.Next.Client.Attrs.Dyn)">
<summary>
 Check if can animate exit transitions.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.Attrs.HasEnterAnim(WebSharper.UI.Next.Client.Attrs.Dyn)">
<summary>
 Check if can animate enter transitions.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.Attrs.HasChangeAnim(WebSharper.UI.Next.Client.Attrs.Dyn)">
<summary>
 Check if currently animating a changing value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.Attrs.Updates(WebSharper.UI.Next.Client.Attrs.Dyn)">
<summary>
 Dynamic updates of attributes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.Attrs.Sync(WebSharper.JavaScript.Dom.Element,WebSharper.UI.Next.Client.Attrs.Dyn)">
<summary>
 Synchronizes dynamic attributes.
 Exception: does not sync nodes that animate change transitions.
 Those synchronize when the relevant transition is played.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.Attrs.Insert(WebSharper.JavaScript.Dom.Element,WebSharper.UI.Next.Attr)">
<summary>
 Inserts static attributes and computes dynamic attributes.
</summary>
</member>
<member name="T:WebSharper.UI.Next.Client.Attrs">
<summary>
 Internals used in Doc.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.Doc.Radio``1(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},``0,WebSharper.UI.Next.IRef{``0})">
<summary>
 Radio button.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.Doc.SelectDynOptional``1(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.String,Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.View{Microsoft.FSharp.Collections.FSharpList{``0}},WebSharper.UI.Next.IRef{Microsoft.FSharp.Core.FSharpOption{``0}})">
<summary>
 Select box with time-varying option list where the first option returns None.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.Doc.SelectOptional``1(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.String,Microsoft.FSharp.Core.FSharpFunc{``0,System.String},Microsoft.FSharp.Collections.FSharpList{``0},WebSharper.UI.Next.IRef{Microsoft.FSharp.Core.FSharpOption{``0}})">
<summary>
 Select box where the first option returns None.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.Doc.SelectDyn``1(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.View{Microsoft.FSharp.Collections.FSharpList{``0}},WebSharper.UI.Next.IRef{``0})">
<summary>
 Select box with time-varying option list.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.Doc.Select``1(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},Microsoft.FSharp.Collections.FSharpList{``0},WebSharper.UI.Next.IRef{``0})">
<summary>
 Select box.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.Doc.CheckBoxGroup``1(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},``0,WebSharper.UI.Next.IRef{Microsoft.FSharp.Collections.FSharpList{``0}})">
<summary>
 Check Box Group.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.Doc.CheckBox(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},WebSharper.UI.Next.IRef{System.Boolean})">
<summary>
 Check Box.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.Doc.LinkView``1(System.String,System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit})">
<summary>
 Hyperlink. Takes a view of reactive components with which it is associated,
 and a callback function of what to do with this view once the link is clicked.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.Doc.Link(System.String,System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})">
<summary>
 Hyperlink. Calls the callback function when the link is clicked.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.Doc.ButtonView``1(System.String,System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit})">
<summary>
 Submit button. Takes a view of reactive components with which it is associated,
 and a callback function of what to do with this view once the button is pressed.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.Doc.Button(System.String,System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})">
<summary>
 Submit button. Calls the callback function when the button is pressed.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.Doc.PasswordBox(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},WebSharper.UI.Next.IRef{System.String})">
<summary>
 Password box.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.Doc.InputArea(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},WebSharper.UI.Next.IRef{System.String})">
<summary>
 Input text area.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.Doc.FloatInputUnchecked(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},WebSharper.UI.Next.IRef{System.Double})">
<summary>
 Input box with type=&quot;number&quot;.
 If the input box is blank, the value is set to 0.
 If the input is not parseable as a float, the value is unchanged from its last valid value.
 It is advised to use FloatInput instead for better user experience.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.Doc.FloatInput(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},WebSharper.UI.Next.IRef{WebSharper.UI.Next.Client.CheckedInput{System.Double}})">
<summary>
 Input box with type=&quot;number&quot;.
 For validation to work properly in Internet Explorer 9 and older,
 needs to be inside a &lt;form&gt; with Attr.ValidateForm.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.Doc.IntInputUnchecked(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},WebSharper.UI.Next.IRef{System.Int32})">
<summary>
 Input box with type=&quot;number&quot;.
 If the input box is blank, the value is set to 0.
 If the input is not parseable as an int, the value is unchanged from its last valid value.
 It is advised to use IntInput instead for better user experience.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.Doc.IntInput(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},WebSharper.UI.Next.IRef{WebSharper.UI.Next.Client.CheckedInput{System.Int32}})">
<summary>
 Input box with type=&quot;number&quot;.
 For validation to work properly in Internet Explorer 9 and older,
 needs to be inside a &lt;form&gt; with Attr.ValidateForm.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.Doc.Input(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},WebSharper.UI.Next.IRef{System.String})">
<summary>
 Input box.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.Doc.RunAfterById(System.String,WebSharper.UI.Next.Doc)">
<summary>
 Runs a reactive Doc as next sibling(s) of the element with the given ID.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.Doc.RunAfter(WebSharper.JavaScript.Dom.Node,WebSharper.UI.Next.Doc)">
<summary>
 Runs a reactive Doc as next sibling(s) of the given element.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.Doc.RunBeforeById(System.String,WebSharper.UI.Next.Doc)">
<summary>
 Runs a reactive Doc as previous sibling(s) of the element with the given ID.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.Doc.RunBefore(WebSharper.JavaScript.Dom.Node,WebSharper.UI.Next.Doc)">
<summary>
 Runs a reactive Doc as previous sibling(s) of the given element.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.Doc.RunAppendById(System.String,WebSharper.UI.Next.Doc)">
<summary>
 Runs a reactive Doc as last child(ren) of the element with the given ID.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.Doc.RunAppend(WebSharper.JavaScript.Dom.Element,WebSharper.UI.Next.Doc)">
<summary>
 Runs a reactive Doc as last child(ren) of the given element.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.Doc.RunPrependById(System.String,WebSharper.UI.Next.Doc)">
<summary>
 Runs a reactive Doc as first child(ren) of the element with the given ID.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.Doc.RunPrepend(WebSharper.JavaScript.Dom.Element,WebSharper.UI.Next.Doc)">
<summary>
 Runs a reactive Doc as first child(ren) of the given element.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.Doc.RunById(System.String,WebSharper.UI.Next.Doc)">
<summary>
 Runs a reactive Doc as contents of the element with the given ID.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.Doc.Run(WebSharper.JavaScript.Dom.Element,WebSharper.UI.Next.Doc)">
<summary>
 Runs a reactive Doc as contents of the given element.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.Doc.BindSeqCachedViewBy``3(Microsoft.FSharp.Core.FSharpFunc{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.FSharpFunc{WebSharper.UI.Next.View{``0},``2}},WebSharper.UI.Next.View{System.Collections.Generic.IEnumerable{``0}})">
<summary>
 Doc.ConvertSeq with a custom key.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.Doc.BindSeqCachedView``2(Microsoft.FSharp.Core.FSharpFunc{WebSharper.UI.Next.View{``0},``1},WebSharper.UI.Next.View{System.Collections.Generic.IEnumerable{``0}})">
<summary>
 Converts a collection to Doc using View.MapSeqCachedView and embeds the concatenated result.
 Shorthand for View.MapSeqCachedView f |&gt; View.Map Doc.Concat |&gt; Doc.EmbedView.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.Doc.BindSeqCachedBy``3(Microsoft.FSharp.Core.FSharpFunc{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``2},WebSharper.UI.Next.View{System.Collections.Generic.IEnumerable{``0}})">
<summary>
 Doc.Convert with a custom key.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.Doc.BindSeqCached``2(Microsoft.FSharp.Core.FSharpFunc{``0,``1},WebSharper.UI.Next.View{System.Collections.Generic.IEnumerable{``0}})">
<summary>
 Converts a collection to Doc using View.MapSeqCached and embeds the concatenated result.
 Shorthand for View.MapSeqCached f |&gt; View.Map Doc.Concat |&gt; Doc.EmbedView.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.Doc.Async``1(Microsoft.FSharp.Control.FSharpAsync{``0})">
<summary>
 Embeds an asynchronous Doc. The resulting Doc is empty until the Async returns.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.Doc.TextView(WebSharper.UI.Next.View{System.String})">
<summary>
 Constructs a reactive text node.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.Doc.Static(WebSharper.JavaScript.Dom.Element)">
<summary>
 Creates a Doc using a given DOM element
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.Doc.BindView``2(Microsoft.FSharp.Core.FSharpFunc{``0,``1},WebSharper.UI.Next.View{``0})">
<summary>
 Embeds time-varying fragments.
 Equivalent to View.Map followed by Doc.EmbedView.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.Doc.EmbedView``1(WebSharper.UI.Next.View{``0})">
<summary>
 Embeds time-varying fragments.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.EltExtensions.Elt.set_Text(WebSharper.UI.Next.Elt,System.String)">
<summary>
 Get or set the element&apos;s text content.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.EltExtensions.Elt.get_Text(WebSharper.UI.Next.Elt)">
<summary>
 Get or set the element&apos;s text content.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.EltExtensions.Elt.set_Value(WebSharper.UI.Next.Elt,System.String)">
<summary>
 Get or set the element&apos;s current value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.EltExtensions.Elt.get_Value(WebSharper.UI.Next.Elt)">
<summary>
 Get or set the element&apos;s current value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.EltExtensions.Elt.get_Id(WebSharper.UI.Next.Elt)">
<summary>
 Get the element&apos;s id.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.EltExtensions.Elt.get_Html(WebSharper.UI.Next.Elt)">
<summary>
 Get the HTML string for this element in its current state.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.EltExtensions.Elt.get_Dom(WebSharper.UI.Next.Elt)">
<summary>
 Get the underlying DOM element.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.wheelView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.WheelEvent,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;wheel&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.wheel.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.WheelEvent,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;wheel&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.waitingView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;waiting&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.waiting.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;waiting&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.volumeChangeView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;volumechange&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.volumeChange.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;volumechange&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.visibilityChangeView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;visibilitychange&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.visibilityChange.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;visibilitychange&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.versionChangeView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;versionchange&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.versionChange.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;versionchange&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.userProximityView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;userproximity&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.userProximity.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;userproximity&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.upgradeNeededView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;upgradeneeded&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.upgradeNeeded.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;upgradeneeded&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.updateReadyView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;updateready&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.updateReady.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;updateready&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.unloadView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.UIEvent,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;unload&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.unload.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.UIEvent,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;unload&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.transitionEndView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;transitionend&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.transitionEnd.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;transitionend&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.touchStartView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;touchstart&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.touchStart.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;touchstart&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.touchMoveView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;touchmove&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.touchMove.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;touchmove&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.touchLeaveView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;touchleave&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.touchLeave.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;touchleave&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.touchEnterView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;touchenter&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.touchEnter.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;touchenter&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.touchEndView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;touchend&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.touchEnd.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;touchend&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.touchCancelView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;touchcancel&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.touchCancel.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;touchcancel&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.timeUpdateView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;timeupdate&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.timeUpdate.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;timeupdate&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.timeOutView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;timeout&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.timeOut.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;timeout&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.SVGZoomView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;SVGZoom&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.SVGZoom.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;SVGZoom&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.SVGUnloadView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;SVGUnload&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.SVGUnload.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;SVGUnload&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.SVGScrollView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;SVGScroll&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.SVGScroll.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;SVGScroll&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.SVGResizeView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;SVGResize&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.SVGResize.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;SVGResize&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.SVGLoadView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;SVGLoad&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.SVGLoad.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;SVGLoad&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.SVGErrorView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;SVGError&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.SVGError.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;SVGError&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.SVGAbortView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;SVGAbort&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.SVGAbort.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;SVGAbort&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.suspendView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;suspend&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.suspend.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;suspend&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.successView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;success&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.success.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;success&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.submitView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;submit&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.submit.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;submit&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.storageView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;storage&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.storage.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;storage&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.stalledView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;stalled&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.stalled.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;stalled&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.showView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.MouseEvent,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;show&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.show.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.MouseEvent,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;show&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.selectView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.UIEvent,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;select&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.select.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.UIEvent,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;select&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.seekingView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;seeking&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.seeking.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;seeking&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.seekedView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;seeked&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.seeked.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;seeked&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.scrollView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.UIEvent,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;scroll&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.scroll.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.UIEvent,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;scroll&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.resizeView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.UIEvent,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;resize&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.resize.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.UIEvent,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;resize&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.resetView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;reset&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.reset.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;reset&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.repeatEventView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;repeatEvent&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.repeatEvent.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;repeatEvent&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.readyStateChangeView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;readystatechange&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.readyStateChange.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;readystatechange&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.rateChangeView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;ratechange&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.rateChange.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;ratechange&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.progressView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;progress&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.progress.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;progress&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.popStateView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;popstate&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.popState.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;popstate&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.pointerLockErrorView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;pointerlockerror&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.pointerLockError.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;pointerlockerror&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.pointerLockChangeView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;pointerlockchange&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.pointerLockChange.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;pointerlockchange&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.playingView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;playing&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.playing.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;playing&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.playView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;play&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.play.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;play&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.pauseView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;pause&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.pause.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;pause&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.pasteView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;paste&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.paste.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;paste&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.pageShowView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;pageshow&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.pageShow.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;pageshow&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.pageHideView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;pagehide&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.pageHide.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;pagehide&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.orientationChangeView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;orientationchange&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.orientationChange.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;orientationchange&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.openView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;open&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.open.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;open&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.onlineView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;online&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.online.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;online&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.offlineView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;offline&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.offline.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;offline&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.obsoleteView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;obsolete&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.obsolete.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;obsolete&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.noUpdateView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;noupdate&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.noUpdate.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;noupdate&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.mouseUpView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.MouseEvent,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;mouseup&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.mouseUp.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.MouseEvent,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;mouseup&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.mouseOverView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.MouseEvent,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;mouseover&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.mouseOver.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.MouseEvent,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;mouseover&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.mouseOutView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.MouseEvent,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;mouseout&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.mouseOut.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.MouseEvent,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;mouseout&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.mouseMoveView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.MouseEvent,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;mousemove&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.mouseMove.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.MouseEvent,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;mousemove&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.mouseLeaveView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.MouseEvent,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;mouseleave&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.mouseLeave.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.MouseEvent,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;mouseleave&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.mouseEnterView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.MouseEvent,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;mouseenter&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.mouseEnter.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.MouseEvent,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;mouseenter&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.mouseDownView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.MouseEvent,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;mousedown&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.mouseDown.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.MouseEvent,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;mousedown&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.messageView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;message&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.message.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;message&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.loadStartView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;loadstart&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.loadStart.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;loadstart&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.loadEndView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;loadend&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.loadEnd.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;loadend&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.loadedMetadataView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;loadedmetadata&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.loadedMetadata.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;loadedmetadata&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.loadedDataView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;loadeddata&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.loadedData.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;loadeddata&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.loadView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.UIEvent,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;load&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.load.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.UIEvent,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;load&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.levelChangeView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;levelchange&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.levelChange.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;levelchange&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.languageChangeView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;languagechange&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.languageChange.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;languagechange&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.keyUpView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.KeyboardEvent,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;keyup&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.keyUp.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.KeyboardEvent,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;keyup&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.keyPressView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.KeyboardEvent,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;keypress&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.keyPress.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.KeyboardEvent,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;keypress&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.keyDownView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.KeyboardEvent,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;keydown&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.keyDown.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.KeyboardEvent,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;keydown&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.invalidView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;invalid&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.invalid.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;invalid&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.inputView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;input&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.input.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;input&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.hashChangeView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;hashchange&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.hashChange.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;hashchange&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.gamepadDisconnectedView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;gamepaddisconnected&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.gamepadDisconnected.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;gamepaddisconnected&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.gamepadConnectedView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;gamepadconnected&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.gamepadConnected.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;gamepadconnected&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.fullScreenErrorView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;fullscreenerror&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.fullScreenError.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;fullscreenerror&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.fullScreenChangeView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;fullscreenchange&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.fullScreenChange.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;fullscreenchange&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.focusView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.FocusEvent,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;focus&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.focus.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.FocusEvent,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;focus&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.errorView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;error&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.error.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;error&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.endEventView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;endEvent&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.endEvent.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;endEvent&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.endedView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;ended&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.ended.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;ended&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.emptiedView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;emptied&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.emptied.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;emptied&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.durationChangeView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;durationchange&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.durationChange.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;durationchange&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.dropView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;drop&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.drop.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;drop&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.dragStartView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;dragstart&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.dragStart.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;dragstart&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.dragOverView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;dragover&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.dragOver.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;dragover&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.dragLeaveView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;dragleave&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.dragLeave.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;dragleave&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.dragEnterView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;dragenter&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.dragEnter.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;dragenter&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.dragEndView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;dragend&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.dragEnd.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;dragend&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.dragView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;drag&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.drag.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;drag&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.downloadingView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;downloading&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.downloading.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;downloading&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.DOMSubtreeModifiedView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.MutationEvent,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;DOMSubtreeModified&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.DOMSubtreeModified.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.MutationEvent,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;DOMSubtreeModified&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.DOMNodeRemovedFromDocumentView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.MutationEvent,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;DOMNodeRemovedFromDocument&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.DOMNodeRemovedFromDocument.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.MutationEvent,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;DOMNodeRemovedFromDocument&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.DOMNodeRemovedView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.MutationEvent,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;DOMNodeRemoved&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.DOMNodeRemoved.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.MutationEvent,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;DOMNodeRemoved&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.DOMNodeInsertedIntoDocumentView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.MutationEvent,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;DOMNodeInsertedIntoDocument&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.DOMNodeInsertedIntoDocument.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.MutationEvent,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;DOMNodeInsertedIntoDocument&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.DOMNodeInsertedView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.MutationEvent,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;DOMNodeInserted&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.DOMNodeInserted.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.MutationEvent,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;DOMNodeInserted&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.DOMElementNameChangedView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;DOMElementNameChanged&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.DOMElementNameChanged.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;DOMElementNameChanged&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.DOMContentLoadedView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;DOMContentLoaded&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.DOMContentLoaded.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;DOMContentLoaded&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.DOMCharacterDataModifiedView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.MutationEvent,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;DOMCharacterDataModified&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.DOMCharacterDataModified.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.MutationEvent,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;DOMCharacterDataModified&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.DOMAttrModifiedView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.MutationEvent,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;DOMAttrModified&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.DOMAttrModified.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.MutationEvent,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;DOMAttrModified&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.DOMAttributeNameChangedView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;DOMAttributeNameChanged&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.DOMAttributeNameChanged.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;DOMAttributeNameChanged&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.DOMActivateView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.UIEvent,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;DOMActivate&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.DOMActivate.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.UIEvent,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;DOMActivate&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.dischargingTimeChangeView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;dischargingtimechange&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.dischargingTimeChange.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;dischargingtimechange&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.deviceProximityView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;deviceproximity&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.deviceProximity.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;deviceproximity&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.deviceOrientationView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;deviceorientation&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.deviceOrientation.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;deviceorientation&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.deviceMotionView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;devicemotion&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.deviceMotion.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;devicemotion&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.deviceLightView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;devicelight&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.deviceLight.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;devicelight&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.dblClickView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.MouseEvent,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;dblclick&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.dblClick.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.MouseEvent,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;dblclick&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.cutView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;cut&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.cut.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;cut&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.copyView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;copy&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.copy.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;copy&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.contextMenuView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.MouseEvent,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;contextmenu&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.contextMenu.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.MouseEvent,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;contextmenu&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.compositionUpdateView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.CompositionEvent,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;compositionupdate&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.compositionUpdate.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.CompositionEvent,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;compositionupdate&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.compositionStartView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.CompositionEvent,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;compositionstart&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.compositionStart.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.CompositionEvent,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;compositionstart&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.compositionEndView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.CompositionEvent,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;compositionend&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.compositionEnd.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.CompositionEvent,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;compositionend&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.completeView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;complete&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.complete.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;complete&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.closeView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;close&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.close.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;close&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.clickView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.MouseEvent,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;click&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.click.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.MouseEvent,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;click&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.checkingView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;checking&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.checking.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;checking&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.chargingTimeChangeView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;chargingtimechange&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.chargingTimeChange.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;chargingtimechange&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.chargingChangeView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;chargingchange&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.chargingChange.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;chargingchange&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.changeView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;change&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.change.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;change&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.canPlayThroughView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;canplaythrough&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.canPlayThrough.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;canplaythrough&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.canPlayView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;canplay&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.canPlay.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;canplay&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.cachedView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;cached&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.cached.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;cached&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.blurView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.FocusEvent,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;blur&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.blur.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.FocusEvent,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;blur&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.blockedView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;blocked&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.blocked.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;blocked&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.beginEventView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;beginEvent&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.beginEvent.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;beginEvent&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.beforeUnloadView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;beforeunload&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.beforeUnload.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;beforeunload&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.beforePrintView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;beforeprint&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.beforePrint.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;beforeprint&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.audioProcessView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;audioprocess&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.audioProcess.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;audioprocess&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.animationStartView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;animationstart&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.animationStart.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;animationstart&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.animationIterationView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;animationiteration&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.animationIteration.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;animationiteration&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.animationEndView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;animationend&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.animationEnd.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;animationend&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.afterPrintView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;afterprint&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.afterPrint.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;afterprint&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.abortView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.UIEvent,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;abort&quot; which also receives the value of a view at the time of the event.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.abort.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.UIEvent,Microsoft.FSharp.Core.Unit}})">
<summary>
 Create a handler for the event &quot;abort&quot;.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.viewUpdate.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}})">
<summary>
 Adds a callback to be called every time the given view receives an updated value,
 iff the element is currently in the DOM.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.afterRenderView.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}})">
<summary>
 Adds a callback to be called after the element has been inserted in the DOM,
 which also receives the value of a view at the time of the event.
 The callback is guaranteed to be called only once, even if the element is moved or removed and reinserted.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.on.afterRender.Static(Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.Unit})">
<summary>
 Adds a callback to be called after the element has been inserted in the DOM.
 The callback is guaranteed to be called only once, even if the element is moved or removed and reinserted.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.wrapAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;wrap&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.wrapDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `wrap v p` sets an HTML attribute &quot;wrap&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.wrapDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;wrap&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.widthAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;width&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.widthDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `width v p` sets an HTML attribute &quot;width&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.widthDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;width&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.vspaceAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;vspace&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.vspaceDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `vspace v p` sets an HTML attribute &quot;vspace&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.vspaceDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;vspace&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.vlinkAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;vlink&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.vlinkDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `vlink v p` sets an HTML attribute &quot;vlink&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.vlinkDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;vlink&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.versionAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;version&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.versionDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `version v p` sets an HTML attribute &quot;version&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.versionDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;version&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.valuetypeAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;valuetype&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.valuetypeDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `valuetype v p` sets an HTML attribute &quot;valuetype&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.valuetypeDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;valuetype&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.valueAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;value&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.valueDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `value v p` sets an HTML attribute &quot;value&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.valueDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;value&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.valignAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;valign&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.valignDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `valign v p` sets an HTML attribute &quot;valign&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.valignDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;valign&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.usemapAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;usemap&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.usemapDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `usemap v p` sets an HTML attribute &quot;usemap&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.usemapDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;usemap&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.typeAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;type&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.typeDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `type v p` sets an HTML attribute &quot;type&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.typeDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;type&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.titleAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;title&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.titleDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `title v p` sets an HTML attribute &quot;title&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.titleDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;title&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.textAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;text&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.textDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `text v p` sets an HTML attribute &quot;text&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.textDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;text&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.targetAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;target&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.targetDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `target v p` sets an HTML attribute &quot;target&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.targetDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;target&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.tabindexAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;tabindex&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.tabindexDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `tabindex v p` sets an HTML attribute &quot;tabindex&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.tabindexDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;tabindex&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.summaryAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;summary&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.summaryDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `summary v p` sets an HTML attribute &quot;summary&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.summaryDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;summary&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.subjectAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;subject&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.subjectDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `subject v p` sets an HTML attribute &quot;subject&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.subjectDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;subject&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.styleAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;style&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.styleDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `style v p` sets an HTML attribute &quot;style&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.styleDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;style&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.stepAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;step&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.stepDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `step v p` sets an HTML attribute &quot;step&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.stepDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;step&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.startAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;start&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.startDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `start v p` sets an HTML attribute &quot;start&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.startDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;start&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.standbyAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;standby&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.standbyDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `standby v p` sets an HTML attribute &quot;standby&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.standbyDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;standby&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.srclangAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;srclang&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.srclangDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `srclang v p` sets an HTML attribute &quot;srclang&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.srclangDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;srclang&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.srcdocAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;srcdoc&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.srcdocDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `srcdoc v p` sets an HTML attribute &quot;srcdoc&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.srcdocDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;srcdoc&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.srcAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;src&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.srcDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `src v p` sets an HTML attribute &quot;src&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.srcDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;src&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.spellcheckAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;spellcheck&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.spellcheckDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `spellcheck v p` sets an HTML attribute &quot;spellcheck&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.spellcheckDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;spellcheck&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.spanAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;span&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.spanDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `span v p` sets an HTML attribute &quot;span&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.spanDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;span&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.sizesAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;sizes&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.sizesDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `sizes v p` sets an HTML attribute &quot;sizes&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.sizesDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;sizes&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.sizeAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;size&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.sizeDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `size v p` sets an HTML attribute &quot;size&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.sizeDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;size&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.shapeAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;shape&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.shapeDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `shape v p` sets an HTML attribute &quot;shape&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.shapeDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;shape&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.selectedAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;selected&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.selectedDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `selected v p` sets an HTML attribute &quot;selected&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.selectedDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;selected&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.seamlessAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;seamless&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.seamlessDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `seamless v p` sets an HTML attribute &quot;seamless&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.seamlessDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;seamless&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.scrollingAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;scrolling&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.scrollingDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `scrolling v p` sets an HTML attribute &quot;scrolling&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.scrollingDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;scrolling&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.scopedAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;scoped&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.scopedDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `scoped v p` sets an HTML attribute &quot;scoped&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.scopedDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;scoped&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.scopeAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;scope&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.scopeDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `scope v p` sets an HTML attribute &quot;scope&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.scopeDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;scope&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.schemeAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;scheme&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.schemeDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `scheme v p` sets an HTML attribute &quot;scheme&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.schemeDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;scheme&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.sandboxAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;sandbox&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.sandboxDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `sandbox v p` sets an HTML attribute &quot;sandbox&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.sandboxDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;sandbox&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.rulesAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;rules&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.rulesDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `rules v p` sets an HTML attribute &quot;rules&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.rulesDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;rules&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.rowspanAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;rowspan&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.rowspanDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `rowspan v p` sets an HTML attribute &quot;rowspan&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.rowspanDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;rowspan&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.rowsAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;rows&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.rowsDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `rows v p` sets an HTML attribute &quot;rows&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.rowsDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;rows&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.reversedAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;reversed&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.reversedDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `reversed v p` sets an HTML attribute &quot;reversed&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.reversedDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;reversed&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.revAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;rev&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.revDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `rev v p` sets an HTML attribute &quot;rev&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.revDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;rev&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.requiredAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;required&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.requiredDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `required v p` sets an HTML attribute &quot;required&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.requiredDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;required&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.relAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;rel&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.relDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `rel v p` sets an HTML attribute &quot;rel&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.relDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;rel&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.readonlyAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;readonly&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.readonlyDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `readonly v p` sets an HTML attribute &quot;readonly&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.readonlyDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;readonly&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.radiogroupAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;radiogroup&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.radiogroupDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `radiogroup v p` sets an HTML attribute &quot;radiogroup&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.radiogroupDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;radiogroup&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.pubdateAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;pubdate&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.pubdateDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `pubdate v p` sets an HTML attribute &quot;pubdate&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.pubdateDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;pubdate&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.promptAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;prompt&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.promptDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `prompt v p` sets an HTML attribute &quot;prompt&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.promptDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;prompt&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.profileAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;profile&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.profileDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `profile v p` sets an HTML attribute &quot;profile&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.profileDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;profile&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.preloadAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;preload&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.preloadDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `preload v p` sets an HTML attribute &quot;preload&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.preloadDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;preload&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.posterAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;poster&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.posterDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `poster v p` sets an HTML attribute &quot;poster&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.posterDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;poster&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.placeholderAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;placeholder&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.placeholderDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `placeholder v p` sets an HTML attribute &quot;placeholder&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.placeholderDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;placeholder&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.pingAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;ping&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.pingDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `ping v p` sets an HTML attribute &quot;ping&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.pingDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;ping&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.patternAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;pattern&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.patternDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `pattern v p` sets an HTML attribute &quot;pattern&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.patternDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;pattern&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.optimumAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;optimum&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.optimumDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `optimum v p` sets an HTML attribute &quot;optimum&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.optimumDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;optimum&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.openAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;open&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.openDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `open v p` sets an HTML attribute &quot;open&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.openDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;open&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.objectAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;object&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.objectDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `object v p` sets an HTML attribute &quot;object&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.objectDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;object&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.nowrapAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;nowrap&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.nowrapDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `nowrap v p` sets an HTML attribute &quot;nowrap&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.nowrapDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;nowrap&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.novalidateAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;novalidate&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.novalidateDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `novalidate v p` sets an HTML attribute &quot;novalidate&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.novalidateDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;novalidate&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.noshadeAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;noshade&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.noshadeDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `noshade v p` sets an HTML attribute &quot;noshade&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.noshadeDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;noshade&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.noresizeAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;noresize&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.noresizeDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `noresize v p` sets an HTML attribute &quot;noresize&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.noresizeDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;noresize&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.nohrefAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;nohref&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.nohrefDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `nohref v p` sets an HTML attribute &quot;nohref&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.nohrefDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;nohref&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.nameAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;name&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.nameDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `name v p` sets an HTML attribute &quot;name&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.nameDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;name&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.multipleAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;multiple&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.multipleDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `multiple v p` sets an HTML attribute &quot;multiple&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.multipleDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;multiple&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.minAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;min&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.minDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `min v p` sets an HTML attribute &quot;min&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.minDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;min&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.methodAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;method&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.methodDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `method v p` sets an HTML attribute &quot;method&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.methodDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;method&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.mediaAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;media&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.mediaDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `media v p` sets an HTML attribute &quot;media&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.mediaDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;media&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.maxlengthAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;maxlength&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.maxlengthDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `maxlength v p` sets an HTML attribute &quot;maxlength&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.maxlengthDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;maxlength&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.maxAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;max&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.maxDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `max v p` sets an HTML attribute &quot;max&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.maxDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;max&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.marginwidthAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;marginwidth&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.marginwidthDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `marginwidth v p` sets an HTML attribute &quot;marginwidth&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.marginwidthDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;marginwidth&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.marginheightAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;marginheight&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.marginheightDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `marginheight v p` sets an HTML attribute &quot;marginheight&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.marginheightDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;marginheight&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.manifestAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;manifest&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.manifestDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `manifest v p` sets an HTML attribute &quot;manifest&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.manifestDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;manifest&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.lowAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;low&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.lowDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `low v p` sets an HTML attribute &quot;low&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.lowDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;low&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.loopAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;loop&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.loopDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `loop v p` sets an HTML attribute &quot;loop&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.loopDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;loop&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.longdescAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;longdesc&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.longdescDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `longdesc v p` sets an HTML attribute &quot;longdesc&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.longdescDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;longdesc&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.listAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;list&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.listDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `list v p` sets an HTML attribute &quot;list&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.listDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;list&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.linkAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;link&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.linkDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `link v p` sets an HTML attribute &quot;link&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.linkDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;link&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.languageAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;language&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.languageDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `language v p` sets an HTML attribute &quot;language&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.languageDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;language&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.langAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;lang&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.langDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `lang v p` sets an HTML attribute &quot;lang&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.langDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;lang&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.labelAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;label&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.labelDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `label v p` sets an HTML attribute &quot;label&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.labelDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;label&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.kindAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;kind&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.kindDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `kind v p` sets an HTML attribute &quot;kind&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.kindDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;kind&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.keytypeAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;keytype&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.keytypeDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `keytype v p` sets an HTML attribute &quot;keytype&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.keytypeDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;keytype&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.itempropAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;itemprop&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.itempropDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `itemprop v p` sets an HTML attribute &quot;itemprop&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.itempropDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;itemprop&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.ismapAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;ismap&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.ismapDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `ismap v p` sets an HTML attribute &quot;ismap&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.ismapDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;ismap&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.idAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;id&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.idDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `id v p` sets an HTML attribute &quot;id&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.idDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;id&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.iconAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;icon&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.iconDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `icon v p` sets an HTML attribute &quot;icon&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.iconDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;icon&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.httpAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;http&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.httpDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `http v p` sets an HTML attribute &quot;http&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.httpDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;http&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.hspaceAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;hspace&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.hspaceDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `hspace v p` sets an HTML attribute &quot;hspace&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.hspaceDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;hspace&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.hreflangAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;hreflang&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.hreflangDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `hreflang v p` sets an HTML attribute &quot;hreflang&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.hreflangDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;hreflang&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.hrefAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;href&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.hrefDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `href v p` sets an HTML attribute &quot;href&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.hrefDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;href&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.highAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;high&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.highDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `high v p` sets an HTML attribute &quot;high&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.highDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;high&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.hiddenAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;hidden&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.hiddenDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `hidden v p` sets an HTML attribute &quot;hidden&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.hiddenDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;hidden&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.heightAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;height&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.heightDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `height v p` sets an HTML attribute &quot;height&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.heightDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;height&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.headersAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;headers&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.headersDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `headers v p` sets an HTML attribute &quot;headers&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.headersDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;headers&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.frameborderAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;frameborder&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.frameborderDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `frameborder v p` sets an HTML attribute &quot;frameborder&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.frameborderDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;frameborder&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.frameAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;frame&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.frameDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `frame v p` sets an HTML attribute &quot;frame&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.frameDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;frame&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.formtargetAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;formtarget&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.formtargetDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `formtarget v p` sets an HTML attribute &quot;formtarget&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.formtargetDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;formtarget&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.formnovalidateAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;formnovalidate&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.formnovalidateDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `formnovalidate v p` sets an HTML attribute &quot;formnovalidate&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.formnovalidateDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;formnovalidate&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.formmethodAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;formmethod&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.formmethodDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `formmethod v p` sets an HTML attribute &quot;formmethod&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.formmethodDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;formmethod&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.formenctypeAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;formenctype&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.formenctypeDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `formenctype v p` sets an HTML attribute &quot;formenctype&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.formenctypeDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;formenctype&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.formactionAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;formaction&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.formactionDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `formaction v p` sets an HTML attribute &quot;formaction&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.formactionDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;formaction&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.formAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;form&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.formDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `form v p` sets an HTML attribute &quot;form&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.formDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;form&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.forAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;for&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.forDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `for v p` sets an HTML attribute &quot;for&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.forDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;for&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.faceAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;face&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.faceDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `face v p` sets an HTML attribute &quot;face&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.faceDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;face&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.enctypeAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;enctype&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.enctypeDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `enctype v p` sets an HTML attribute &quot;enctype&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.enctypeDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;enctype&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.dropzoneAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;dropzone&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.dropzoneDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `dropzone v p` sets an HTML attribute &quot;dropzone&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.dropzoneDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;dropzone&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.draggableAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;draggable&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.draggableDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `draggable v p` sets an HTML attribute &quot;draggable&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.draggableDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;draggable&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.downloadAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;download&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.downloadDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `download v p` sets an HTML attribute &quot;download&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.downloadDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;download&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.disabledAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;disabled&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.disabledDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `disabled v p` sets an HTML attribute &quot;disabled&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.disabledDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;disabled&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.dirAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;dir&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.dirDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `dir v p` sets an HTML attribute &quot;dir&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.dirDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;dir&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.deferAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;defer&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.deferDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `defer v p` sets an HTML attribute &quot;defer&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.deferDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;defer&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.defaultAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;default&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.defaultDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `default v p` sets an HTML attribute &quot;default&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.defaultDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;default&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.declareAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;declare&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.declareDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `declare v p` sets an HTML attribute &quot;declare&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.declareDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;declare&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.datetimeAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;datetime&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.datetimeDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `datetime v p` sets an HTML attribute &quot;datetime&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.datetimeDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;datetime&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.dataAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;data&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.dataDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `data v p` sets an HTML attribute &quot;data&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.dataDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;data&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.coordsAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;coords&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.coordsDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `coords v p` sets an HTML attribute &quot;coords&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.coordsDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;coords&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.controlsAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;controls&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.controlsDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `controls v p` sets an HTML attribute &quot;controls&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.controlsDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;controls&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.contextmenuAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;contextmenu&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.contextmenuDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `contextmenu v p` sets an HTML attribute &quot;contextmenu&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.contextmenuDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;contextmenu&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.contenteditableAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;contenteditable&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.contenteditableDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `contenteditable v p` sets an HTML attribute &quot;contenteditable&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.contenteditableDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;contenteditable&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.contentAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;content&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.contentDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `content v p` sets an HTML attribute &quot;content&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.contentDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;content&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.compactAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;compact&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.compactDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `compact v p` sets an HTML attribute &quot;compact&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.compactDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;compact&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.colspanAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;colspan&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.colspanDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `colspan v p` sets an HTML attribute &quot;colspan&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.colspanDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;colspan&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.colsAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;cols&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.colsDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `cols v p` sets an HTML attribute &quot;cols&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.colsDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;cols&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.colorAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;color&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.colorDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `color v p` sets an HTML attribute &quot;color&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.colorDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;color&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.codetypeAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;codetype&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.codetypeDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `codetype v p` sets an HTML attribute &quot;codetype&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.codetypeDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;codetype&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.codebaseAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;codebase&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.codebaseDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `codebase v p` sets an HTML attribute &quot;codebase&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.codebaseDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;codebase&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.codeAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;code&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.codeDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `code v p` sets an HTML attribute &quot;code&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.codeDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;code&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.clearAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;clear&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.clearDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `clear v p` sets an HTML attribute &quot;clear&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.clearDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;clear&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.classidAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;classid&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.classidDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `classid v p` sets an HTML attribute &quot;classid&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.classidDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;classid&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.classAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;class&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.classDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `class v p` sets an HTML attribute &quot;class&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.classDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;class&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.citeAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;cite&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.citeDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `cite v p` sets an HTML attribute &quot;cite&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.citeDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;cite&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.checkedAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;checked&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.checkedDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `checked v p` sets an HTML attribute &quot;checked&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.checkedDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;checked&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.charsetAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;charset&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.charsetDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `charset v p` sets an HTML attribute &quot;charset&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.charsetDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;charset&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.charoffAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;charoff&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.charoffDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `charoff v p` sets an HTML attribute &quot;charoff&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.charoffDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;charoff&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.charAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;char&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.charDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `char v p` sets an HTML attribute &quot;char&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.charDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;char&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.challengeAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;challenge&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.challengeDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `challenge v p` sets an HTML attribute &quot;challenge&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.challengeDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;challenge&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.cellspacingAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;cellspacing&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.cellspacingDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `cellspacing v p` sets an HTML attribute &quot;cellspacing&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.cellspacingDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;cellspacing&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.cellpaddingAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;cellpadding&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.cellpaddingDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `cellpadding v p` sets an HTML attribute &quot;cellpadding&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.cellpaddingDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;cellpadding&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.bufferedAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;buffered&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.bufferedDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `buffered v p` sets an HTML attribute &quot;buffered&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.bufferedDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;buffered&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.bordercolorAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;bordercolor&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.bordercolorDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `bordercolor v p` sets an HTML attribute &quot;bordercolor&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.bordercolorDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;bordercolor&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.borderAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;border&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.borderDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `border v p` sets an HTML attribute &quot;border&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.borderDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;border&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.bgcolorAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;bgcolor&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.bgcolorDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `bgcolor v p` sets an HTML attribute &quot;bgcolor&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.bgcolorDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;bgcolor&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.backgroundAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;background&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.backgroundDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `background v p` sets an HTML attribute &quot;background&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.backgroundDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;background&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.axisAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;axis&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.axisDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `axis v p` sets an HTML attribute &quot;axis&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.axisDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;axis&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.autosaveAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;autosave&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.autosaveDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `autosave v p` sets an HTML attribute &quot;autosave&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.autosaveDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;autosave&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.autoplayAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;autoplay&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.autoplayDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `autoplay v p` sets an HTML attribute &quot;autoplay&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.autoplayDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;autoplay&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.autofocusAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;autofocus&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.autofocusDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `autofocus v p` sets an HTML attribute &quot;autofocus&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.autofocusDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;autofocus&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.autocompleteAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;autocomplete&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.autocompleteDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `autocomplete v p` sets an HTML attribute &quot;autocomplete&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.autocompleteDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;autocomplete&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.asyncAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;async&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.asyncDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `async v p` sets an HTML attribute &quot;async&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.asyncDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;async&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.archiveAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;archive&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.archiveDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `archive v p` sets an HTML attribute &quot;archive&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.archiveDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;archive&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.altcodeAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;altcode&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.altcodeDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `altcode v p` sets an HTML attribute &quot;altcode&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.altcodeDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;altcode&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.altAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;alt&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.altDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `alt v p` sets an HTML attribute &quot;alt&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.altDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;alt&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.alinkAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;alink&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.alinkDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `alink v p` sets an HTML attribute &quot;alink&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.alinkDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;alink&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.alignAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;align&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.alignDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `align v p` sets an HTML attribute &quot;align&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.alignDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;align&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.actionAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;action&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.actionDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `action v p` sets an HTML attribute &quot;action&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.actionDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;action&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.accesskeyAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;accesskey&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.accesskeyDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `accesskey v p` sets an HTML attribute &quot;accesskey&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.accesskeyDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;accesskey&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.acceptCharsetAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;accept-charset&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.acceptCharsetDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `acceptCharset v p` sets an HTML attribute &quot;accept-charset&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.acceptCharsetDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;accept-charset&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.acceptAnim.Static``1(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;accept&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.acceptDynPred.Static(WebSharper.UI.Next.View{System.String},WebSharper.UI.Next.View{System.Boolean})">
<summary>
 `accept v p` sets an HTML attribute &quot;accept&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.acceptDyn.Static(WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;accept&quot; with the given reactive value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.dataAnim-.Static``1(System.String,WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},WebSharper.UI.Next.Trans{``0})">
<summary>
 Create an animated HTML attribute &quot;data-name&quot; whose value is computed from the given reactive view.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.dataDynPred-.Static(System.String,WebSharper.UI.Next.View{System.Boolean},WebSharper.UI.Next.View{System.String})">
<summary>
 `dataDynPred- v p` sets an HTML attribute &quot;data-name&quot; with reactive value v when p is true, and unsets it when p is false.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Client.HtmlExtensions.attr.dataDyn-.Static(System.String,WebSharper.UI.Next.View{System.String})">
<summary>
 Create an HTML attribute &quot;data-name&quot; with the given reactive value.
</summary>
</member>
<member name="T:WebSharper.UI.Next.DomUtility.InsertPos">
<summary>
 Position in a `children` list of a DOM Element
 where a node can be inserted.
</summary>
</member>
<member name="M:WebSharper.UI.Next.DomUtility.RemoveClass(WebSharper.JavaScript.Dom.Element,System.String)">
<summary>
 Removes a class.
</summary>
</member>
<member name="M:WebSharper.UI.Next.DomUtility.AddClass(WebSharper.JavaScript.Dom.Element,System.String)">
<summary>
 Adds a class.
</summary>
</member>
<member name="M:WebSharper.UI.Next.DomUtility.InsertAt(WebSharper.JavaScript.Dom.Element,WebSharper.UI.Next.DomUtility.InsertPos,WebSharper.JavaScript.Dom.Node)">
<summary>
 Inserts a new child node into the tree under
 a given `parent` at given `pos`.
</summary>
</member>
<member name="M:WebSharper.UI.Next.DomUtility.RemoveNode(WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Node)">
<summary>
 Safe remove of a node
</summary>
</member>
<member name="M:WebSharper.UI.Next.DomUtility.SetStyle(WebSharper.JavaScript.Dom.Element,System.String,System.String)">
<summary>
 Sets a style property.
</summary>
</member>
<member name="M:WebSharper.UI.Next.DomUtility.SetAttr(WebSharper.JavaScript.Dom.Element,System.String,System.String)">
<summary>
 Sets the value of the attribute given by
 `name` to `value` in element `el`.
</summary>
</member>
<member name="M:WebSharper.UI.Next.DomUtility.RemoveAttr(WebSharper.JavaScript.Dom.Element,System.String)">
<summary>
 Removes a DOM attribute.
</summary>
</member>
<member name="M:WebSharper.UI.Next.DomUtility.CreateAttr(System.String,System.String)">
<summary>
 Creates a new DOM attribute.
</summary>
</member>
<member name="M:WebSharper.UI.Next.DomUtility.CreateText(System.String)">
<summary>
 Creates a new DOM text node with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.DomUtility.CreateSvgElement(System.String)">
<summary>
 Creates an element in the SVG namespace.
</summary>
</member>
<member name="M:WebSharper.UI.Next.DomUtility.CreateElement(System.String)">
<summary>
 Creates a new DOM element.
</summary>
</member>
<member name="M:WebSharper.UI.Next.DomUtility.Clear(WebSharper.JavaScript.Dom.Element)">
<summary>
 Removes all child nodes from the given DOM element.
</summary>
</member>
<member name="M:WebSharper.UI.Next.DomUtility.ClearAttrs(WebSharper.JavaScript.Dom.Element)">
<summary>
 Removes all attributes from the given DOM element.
</summary>
</member>
<member name="M:WebSharper.UI.Next.DomUtility.AppendTo(WebSharper.JavaScript.Dom.Element,WebSharper.JavaScript.Dom.Node)">
<summary>
 Appends a child node to the given DOM element.
</summary>
</member>
<member name="P:WebSharper.UI.Next.DomUtility.Doc">
<summary>
 The current DOM Document.
</summary>
</member>
<member name="T:WebSharper.UI.Next.DomUtility">
<summary>
 Utility functions for manipulating DOM.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.wheel(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.WheelEvent,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;wheel&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.waiting(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;waiting&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.volumeChange(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;volumechange&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.visibilityChange(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;visibilitychange&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.versionChange(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;versionchange&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.userProximity(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;userproximity&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.upgradeNeeded(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;upgradeneeded&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.updateReady(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;updateready&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.unload(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.UIEvent,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;unload&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.transitionEnd(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;transitionend&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.touchStart(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;touchstart&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.touchMove(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;touchmove&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.touchLeave(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;touchleave&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.touchEnter(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;touchenter&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.touchEnd(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;touchend&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.touchCancel(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;touchcancel&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.timeUpdate(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;timeupdate&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.timeOut(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;timeout&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.suspend(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;suspend&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.success(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;success&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.submit(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;submit&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.storage(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;storage&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.stalled(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;stalled&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.show(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.MouseEvent,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;show&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.select(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.UIEvent,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;select&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.seeking(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;seeking&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.seeked(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;seeked&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.scroll(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.UIEvent,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;scroll&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.resize(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.UIEvent,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;resize&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.reset(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;reset&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.repeatEvent(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;repeatEvent&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.readyStateChange(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;readystatechange&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.rateChange(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;ratechange&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.progress(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;progress&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.popState(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;popstate&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.pointerLockError(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;pointerlockerror&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.pointerLockChange(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;pointerlockchange&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.playing(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;playing&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.play(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;play&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.pause(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;pause&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.paste(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;paste&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.pageShow(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;pageshow&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.pageHide(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;pagehide&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.orientationChange(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;orientationchange&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.open(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;open&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.online(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;online&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.offline(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;offline&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.obsolete(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;obsolete&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.noUpdate(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;noupdate&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.mouseUp(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.MouseEvent,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;mouseup&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.mouseOver(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.MouseEvent,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;mouseover&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.mouseOut(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.MouseEvent,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;mouseout&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.mouseMove(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.MouseEvent,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;mousemove&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.mouseLeave(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.MouseEvent,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;mouseleave&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.mouseEnter(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.MouseEvent,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;mouseenter&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.mouseDown(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.MouseEvent,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;mousedown&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.message(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;message&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.loadedMetadata(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;loadedmetadata&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.loadedData(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;loadeddata&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.loadStart(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;loadstart&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.loadEnd(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;loadend&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.load(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.UIEvent,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;load&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.levelChange(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;levelchange&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.languageChange(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;languagechange&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.keyUp(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.KeyboardEvent,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;keyup&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.keyPress(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.KeyboardEvent,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;keypress&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.keyDown(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.KeyboardEvent,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;keydown&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.invalid(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;invalid&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.input(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;input&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.hashChange(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;hashchange&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.gamepadDisconnected(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;gamepaddisconnected&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.gamepadConnected(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;gamepadconnected&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.fullScreenError(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;fullscreenerror&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.fullScreenChange(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;fullscreenchange&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.focus(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.FocusEvent,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;focus&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.error(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;error&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.ended(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;ended&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.endEvent(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;endEvent&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.emptied(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;emptied&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.durationChange(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;durationchange&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.drop(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;drop&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.dragStart(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;dragstart&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.dragOver(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;dragover&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.dragLeave(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;dragleave&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.dragEnter(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;dragenter&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.dragEnd(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;dragend&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.drag(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;drag&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.downloading(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;downloading&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.dischargingTimeChange(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;dischargingtimechange&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.deviceProximity(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;deviceproximity&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.deviceOrientation(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;deviceorientation&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.deviceMotion(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;devicemotion&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.deviceLight(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;devicelight&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.dblClick(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.MouseEvent,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;dblclick&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.cut(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;cut&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.copy(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;copy&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.contextMenu(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.MouseEvent,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;contextmenu&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.compositionUpdate(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.CompositionEvent,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;compositionupdate&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.compositionStart(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.CompositionEvent,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;compositionstart&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.compositionEnd(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.CompositionEvent,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;compositionend&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.complete(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;complete&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.close(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;close&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.click(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.MouseEvent,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;click&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.checking(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;checking&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.chargingTimeChange(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;chargingtimechange&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.chargingChange(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;chargingchange&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.change(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;change&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.canPlayThrough(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;canplaythrough&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.canPlay(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;canplay&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.cached(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;cached&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.blur(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.FocusEvent,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;blur&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.blocked(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;blocked&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.beginEvent(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;beginEvent&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.beforeUnload(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;beforeunload&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.beforePrint(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;beforeprint&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.audioProcess(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;audioprocess&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.animationStart(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;animationstart&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.animationIteration(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;animationiteration&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.animationEnd(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;animationend&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.afterPrint(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;afterprint&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.abort(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.UIEvent,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;abort&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.SVGZoom(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;SVGZoom&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.SVGUnload(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;SVGUnload&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.SVGScroll(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;SVGScroll&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.SVGResize(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;SVGResize&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.SVGLoad(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;SVGLoad&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.SVGError(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;SVGError&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.SVGAbort(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;SVGAbort&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.DOMSubtreeModified(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.MutationEvent,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;DOMSubtreeModified&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.DOMNodeRemovedFromDocument(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.MutationEvent,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;DOMNodeRemovedFromDocument&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.DOMNodeRemoved(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.MutationEvent,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;DOMNodeRemoved&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.DOMNodeInsertedIntoDocument(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.MutationEvent,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;DOMNodeInsertedIntoDocument&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.DOMNodeInserted(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.MutationEvent,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;DOMNodeInserted&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.DOMElementNameChanged(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;DOMElementNameChanged&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.DOMContentLoaded(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;DOMContentLoaded&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.DOMCharacterDataModified(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.MutationEvent,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;DOMCharacterDataModified&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.DOMAttributeNameChanged(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Event,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;DOMAttributeNameChanged&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.DOMAttrModified(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.MutationEvent,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;DOMAttrModified&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.on.DOMActivate(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.Element,Microsoft.FSharp.Core.FSharpFunc{WebSharper.JavaScript.Dom.UIEvent,Microsoft.FSharp.Core.Unit}}})">
<summary>
 Create a handler for the event &quot;DOMActivate&quot;.
 When called on the server side, the handler must be a top-level function or a static member.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.wrap(System.String)">
<summary>
 Create an HTML attribute &quot;wrap&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.width(System.String)">
<summary>
 Create an HTML attribute &quot;width&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.vspace(System.String)">
<summary>
 Create an HTML attribute &quot;vspace&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.vlink(System.String)">
<summary>
 Create an HTML attribute &quot;vlink&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.version(System.String)">
<summary>
 Create an HTML attribute &quot;version&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.valuetype(System.String)">
<summary>
 Create an HTML attribute &quot;valuetype&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.value(System.String)">
<summary>
 Create an HTML attribute &quot;value&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.valign(System.String)">
<summary>
 Create an HTML attribute &quot;valign&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.usemap(System.String)">
<summary>
 Create an HTML attribute &quot;usemap&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.type(System.String)">
<summary>
 Create an HTML attribute &quot;type&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.title(System.String)">
<summary>
 Create an HTML attribute &quot;title&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.text(System.String)">
<summary>
 Create an HTML attribute &quot;text&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.target(System.String)">
<summary>
 Create an HTML attribute &quot;target&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.tabindex(System.String)">
<summary>
 Create an HTML attribute &quot;tabindex&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.summary(System.String)">
<summary>
 Create an HTML attribute &quot;summary&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.subject(System.String)">
<summary>
 Create an HTML attribute &quot;subject&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.style(System.String)">
<summary>
 Create an HTML attribute &quot;style&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.step(System.String)">
<summary>
 Create an HTML attribute &quot;step&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.start(System.String)">
<summary>
 Create an HTML attribute &quot;start&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.standby(System.String)">
<summary>
 Create an HTML attribute &quot;standby&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.srclang(System.String)">
<summary>
 Create an HTML attribute &quot;srclang&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.srcdoc(System.String)">
<summary>
 Create an HTML attribute &quot;srcdoc&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.src(System.String)">
<summary>
 Create an HTML attribute &quot;src&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.spellcheck(System.String)">
<summary>
 Create an HTML attribute &quot;spellcheck&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.span(System.String)">
<summary>
 Create an HTML attribute &quot;span&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.sizes(System.String)">
<summary>
 Create an HTML attribute &quot;sizes&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.size(System.String)">
<summary>
 Create an HTML attribute &quot;size&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.shape(System.String)">
<summary>
 Create an HTML attribute &quot;shape&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.selected(System.String)">
<summary>
 Create an HTML attribute &quot;selected&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.seamless(System.String)">
<summary>
 Create an HTML attribute &quot;seamless&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.scrolling(System.String)">
<summary>
 Create an HTML attribute &quot;scrolling&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.scoped(System.String)">
<summary>
 Create an HTML attribute &quot;scoped&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.scope(System.String)">
<summary>
 Create an HTML attribute &quot;scope&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.scheme(System.String)">
<summary>
 Create an HTML attribute &quot;scheme&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.sandbox(System.String)">
<summary>
 Create an HTML attribute &quot;sandbox&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.rules(System.String)">
<summary>
 Create an HTML attribute &quot;rules&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.rowspan(System.String)">
<summary>
 Create an HTML attribute &quot;rowspan&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.rows(System.String)">
<summary>
 Create an HTML attribute &quot;rows&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.reversed(System.String)">
<summary>
 Create an HTML attribute &quot;reversed&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.rev(System.String)">
<summary>
 Create an HTML attribute &quot;rev&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.required(System.String)">
<summary>
 Create an HTML attribute &quot;required&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.rel(System.String)">
<summary>
 Create an HTML attribute &quot;rel&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.readonly(System.String)">
<summary>
 Create an HTML attribute &quot;readonly&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.radiogroup(System.String)">
<summary>
 Create an HTML attribute &quot;radiogroup&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.pubdate(System.String)">
<summary>
 Create an HTML attribute &quot;pubdate&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.prompt(System.String)">
<summary>
 Create an HTML attribute &quot;prompt&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.profile(System.String)">
<summary>
 Create an HTML attribute &quot;profile&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.preload(System.String)">
<summary>
 Create an HTML attribute &quot;preload&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.poster(System.String)">
<summary>
 Create an HTML attribute &quot;poster&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.placeholder(System.String)">
<summary>
 Create an HTML attribute &quot;placeholder&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.ping(System.String)">
<summary>
 Create an HTML attribute &quot;ping&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.pattern(System.String)">
<summary>
 Create an HTML attribute &quot;pattern&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.optimum(System.String)">
<summary>
 Create an HTML attribute &quot;optimum&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.open(System.String)">
<summary>
 Create an HTML attribute &quot;open&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.object(System.String)">
<summary>
 Create an HTML attribute &quot;object&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.nowrap(System.String)">
<summary>
 Create an HTML attribute &quot;nowrap&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.novalidate(System.String)">
<summary>
 Create an HTML attribute &quot;novalidate&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.noshade(System.String)">
<summary>
 Create an HTML attribute &quot;noshade&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.noresize(System.String)">
<summary>
 Create an HTML attribute &quot;noresize&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.nohref(System.String)">
<summary>
 Create an HTML attribute &quot;nohref&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.name(System.String)">
<summary>
 Create an HTML attribute &quot;name&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.multiple(System.String)">
<summary>
 Create an HTML attribute &quot;multiple&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.min(System.String)">
<summary>
 Create an HTML attribute &quot;min&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.method(System.String)">
<summary>
 Create an HTML attribute &quot;method&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.media(System.String)">
<summary>
 Create an HTML attribute &quot;media&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.maxlength(System.String)">
<summary>
 Create an HTML attribute &quot;maxlength&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.max(System.String)">
<summary>
 Create an HTML attribute &quot;max&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.marginwidth(System.String)">
<summary>
 Create an HTML attribute &quot;marginwidth&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.marginheight(System.String)">
<summary>
 Create an HTML attribute &quot;marginheight&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.manifest(System.String)">
<summary>
 Create an HTML attribute &quot;manifest&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.low(System.String)">
<summary>
 Create an HTML attribute &quot;low&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.loop(System.String)">
<summary>
 Create an HTML attribute &quot;loop&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.longdesc(System.String)">
<summary>
 Create an HTML attribute &quot;longdesc&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.list(System.String)">
<summary>
 Create an HTML attribute &quot;list&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.link(System.String)">
<summary>
 Create an HTML attribute &quot;link&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.language(System.String)">
<summary>
 Create an HTML attribute &quot;language&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.lang(System.String)">
<summary>
 Create an HTML attribute &quot;lang&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.label(System.String)">
<summary>
 Create an HTML attribute &quot;label&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.kind(System.String)">
<summary>
 Create an HTML attribute &quot;kind&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.keytype(System.String)">
<summary>
 Create an HTML attribute &quot;keytype&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.itemprop(System.String)">
<summary>
 Create an HTML attribute &quot;itemprop&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.ismap(System.String)">
<summary>
 Create an HTML attribute &quot;ismap&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.id(System.String)">
<summary>
 Create an HTML attribute &quot;id&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.icon(System.String)">
<summary>
 Create an HTML attribute &quot;icon&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.http(System.String)">
<summary>
 Create an HTML attribute &quot;http&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.hspace(System.String)">
<summary>
 Create an HTML attribute &quot;hspace&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.hreflang(System.String)">
<summary>
 Create an HTML attribute &quot;hreflang&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.href(System.String)">
<summary>
 Create an HTML attribute &quot;href&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.high(System.String)">
<summary>
 Create an HTML attribute &quot;high&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.hidden(System.String)">
<summary>
 Create an HTML attribute &quot;hidden&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.height(System.String)">
<summary>
 Create an HTML attribute &quot;height&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.headers(System.String)">
<summary>
 Create an HTML attribute &quot;headers&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.frameborder(System.String)">
<summary>
 Create an HTML attribute &quot;frameborder&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.frame(System.String)">
<summary>
 Create an HTML attribute &quot;frame&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.formtarget(System.String)">
<summary>
 Create an HTML attribute &quot;formtarget&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.formnovalidate(System.String)">
<summary>
 Create an HTML attribute &quot;formnovalidate&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.formmethod(System.String)">
<summary>
 Create an HTML attribute &quot;formmethod&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.formenctype(System.String)">
<summary>
 Create an HTML attribute &quot;formenctype&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.formaction(System.String)">
<summary>
 Create an HTML attribute &quot;formaction&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.form(System.String)">
<summary>
 Create an HTML attribute &quot;form&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.for(System.String)">
<summary>
 Create an HTML attribute &quot;for&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.face(System.String)">
<summary>
 Create an HTML attribute &quot;face&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.enctype(System.String)">
<summary>
 Create an HTML attribute &quot;enctype&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.dropzone(System.String)">
<summary>
 Create an HTML attribute &quot;dropzone&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.draggable(System.String)">
<summary>
 Create an HTML attribute &quot;draggable&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.download(System.String)">
<summary>
 Create an HTML attribute &quot;download&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.disabled(System.String)">
<summary>
 Create an HTML attribute &quot;disabled&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.dir(System.String)">
<summary>
 Create an HTML attribute &quot;dir&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.defer(System.String)">
<summary>
 Create an HTML attribute &quot;defer&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.default(System.String)">
<summary>
 Create an HTML attribute &quot;default&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.declare(System.String)">
<summary>
 Create an HTML attribute &quot;declare&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.datetime(System.String)">
<summary>
 Create an HTML attribute &quot;datetime&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.data-(System.String,System.String)">
<summary>
 Create an HTML attribute &quot;data-name&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.data(System.String)">
<summary>
 Create an HTML attribute &quot;data&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.coords(System.String)">
<summary>
 Create an HTML attribute &quot;coords&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.controls(System.String)">
<summary>
 Create an HTML attribute &quot;controls&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.contextmenu(System.String)">
<summary>
 Create an HTML attribute &quot;contextmenu&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.contenteditable(System.String)">
<summary>
 Create an HTML attribute &quot;contenteditable&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.content(System.String)">
<summary>
 Create an HTML attribute &quot;content&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.compact(System.String)">
<summary>
 Create an HTML attribute &quot;compact&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.colspan(System.String)">
<summary>
 Create an HTML attribute &quot;colspan&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.cols(System.String)">
<summary>
 Create an HTML attribute &quot;cols&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.color(System.String)">
<summary>
 Create an HTML attribute &quot;color&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.codetype(System.String)">
<summary>
 Create an HTML attribute &quot;codetype&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.codebase(System.String)">
<summary>
 Create an HTML attribute &quot;codebase&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.code(System.String)">
<summary>
 Create an HTML attribute &quot;code&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.clear(System.String)">
<summary>
 Create an HTML attribute &quot;clear&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.classid(System.String)">
<summary>
 Create an HTML attribute &quot;classid&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.class(System.String)">
<summary>
 Create an HTML attribute &quot;class&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.cite(System.String)">
<summary>
 Create an HTML attribute &quot;cite&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.checked(System.String)">
<summary>
 Create an HTML attribute &quot;checked&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.charset(System.String)">
<summary>
 Create an HTML attribute &quot;charset&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.charoff(System.String)">
<summary>
 Create an HTML attribute &quot;charoff&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.char(System.String)">
<summary>
 Create an HTML attribute &quot;char&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.challenge(System.String)">
<summary>
 Create an HTML attribute &quot;challenge&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.cellspacing(System.String)">
<summary>
 Create an HTML attribute &quot;cellspacing&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.cellpadding(System.String)">
<summary>
 Create an HTML attribute &quot;cellpadding&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.buffered(System.String)">
<summary>
 Create an HTML attribute &quot;buffered&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.bordercolor(System.String)">
<summary>
 Create an HTML attribute &quot;bordercolor&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.border(System.String)">
<summary>
 Create an HTML attribute &quot;border&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.bgcolor(System.String)">
<summary>
 Create an HTML attribute &quot;bgcolor&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.background(System.String)">
<summary>
 Create an HTML attribute &quot;background&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.axis(System.String)">
<summary>
 Create an HTML attribute &quot;axis&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.autosave(System.String)">
<summary>
 Create an HTML attribute &quot;autosave&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.autoplay(System.String)">
<summary>
 Create an HTML attribute &quot;autoplay&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.autofocus(System.String)">
<summary>
 Create an HTML attribute &quot;autofocus&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.autocomplete(System.String)">
<summary>
 Create an HTML attribute &quot;autocomplete&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.async(System.String)">
<summary>
 Create an HTML attribute &quot;async&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.archive(System.String)">
<summary>
 Create an HTML attribute &quot;archive&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.altcode(System.String)">
<summary>
 Create an HTML attribute &quot;altcode&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.alt(System.String)">
<summary>
 Create an HTML attribute &quot;alt&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.alink(System.String)">
<summary>
 Create an HTML attribute &quot;alink&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.align(System.String)">
<summary>
 Create an HTML attribute &quot;align&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.action(System.String)">
<summary>
 Create an HTML attribute &quot;action&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.accesskey(System.String)">
<summary>
 Create an HTML attribute &quot;accesskey&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.acceptCharset(System.String)">
<summary>
 Create an HTML attribute &quot;accept-charset&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.attr.accept(System.String)">
<summary>
 Create an HTML attribute &quot;accept&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.wbr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;wbr&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.wbrAttr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;wbr&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.video(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;video&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.videoAttr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;video&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.ul(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;ul&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.ulAttr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;ul&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.track(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;track&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.trackAttr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;track&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.tr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;tr&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.trAttr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;tr&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.time(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;time&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.timeAttr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;time&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.thead(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;thead&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.theadAttr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;thead&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.th(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;th&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.thAttr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;th&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.tfoot(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;tfoot&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.tfootAttr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;tfoot&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.textarea(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;textarea&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.textareaAttr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;textarea&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.td(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;td&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.tdAttr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;td&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.tbody(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;tbody&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.tbodyAttr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;tbody&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.table(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;table&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.tableAttr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;table&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.sup(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;sup&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.supAttr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;sup&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.summary(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;summary&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.summaryAttr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;summary&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.sub(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;sub&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.subAttr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;sub&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.strong(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;strong&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.strongAttr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;strong&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.span(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;span&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.spanAttr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;span&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.source(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;source&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.sourceAttr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;source&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.small(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;small&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.smallAttr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;small&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.shadow(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;shadow&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.shadowAttr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;shadow&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.select(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;select&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.selectAttr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;select&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.section(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;section&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.sectionAttr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;section&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.script(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;script&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.scriptAttr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;script&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.samp(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;samp&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.sampAttr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;samp&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.ruby(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;ruby&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.rubyAttr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;ruby&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.rtc(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;rtc&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.rtcAttr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;rtc&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.rt(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;rt&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.rtAttr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;rt&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.rp(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;rp&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.rpAttr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;rp&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.q(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;q&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.qAttr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;q&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.progress(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;progress&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.progressAttr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;progress&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.pre(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;pre&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.preAttr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;pre&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.picture(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;picture&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.pictureAttr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;picture&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.param(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;param&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.paramAttr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;param&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.p(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;p&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.pAttr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;p&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.output(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;output&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.outputAttr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;output&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.optgroup(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;optgroup&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.optgroupAttr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;optgroup&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.ol(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;ol&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.olAttr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;ol&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.noscript(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;noscript&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.noscriptAttr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;noscript&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.noframes(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;noframes&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.noframesAttr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;noframes&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.nav(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;nav&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.navAttr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;nav&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.meter(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;meter&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.meterAttr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;meter&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.meta(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;meta&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.metaAttr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;meta&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.mark(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;mark&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.markAttr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;mark&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.link(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;link&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.linkAttr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;link&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.li(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;li&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.liAttr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;li&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.legend(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;legend&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.legendAttr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;legend&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.label(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;label&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.labelAttr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;label&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.keygen(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;keygen&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.keygenAttr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;keygen&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.kbd(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;kbd&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.kbdAttr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;kbd&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.ins(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;ins&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.insAttr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;ins&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.input(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;input&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.inputAttr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;input&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.img(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;img&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.imgAttr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;img&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.iframe(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;iframe&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.iframeAttr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;iframe&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.i(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;i&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.iAttr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;i&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.html(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;html&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.htmlAttr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;html&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.hr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;hr&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.hrAttr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;hr&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.hgroup(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;hgroup&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.hgroupAttr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;hgroup&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.header(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;header&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.headerAttr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;header&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.head(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;head&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.headAttr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;head&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.h6(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;h6&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.h6Attr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;h6&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.h5(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;h5&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.h5Attr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;h5&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.h4(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;h4&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.h4Attr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;h4&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.h3(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;h3&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.h3Attr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;h3&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.h2(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;h2&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.h2Attr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;h2&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.h1(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;h1&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.h1Attr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;h1&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.form(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;form&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.formAttr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;form&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.footer(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;footer&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.footerAttr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;footer&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.figure(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;figure&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.figureAttr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;figure&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.figcaption(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;figcaption&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.figcaptionAttr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;figcaption&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.fieldset(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;fieldset&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.fieldsetAttr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;fieldset&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.embed(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;embed&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.embedAttr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;embed&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.em(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;em&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.emAttr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;em&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.dt(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;dt&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.dtAttr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;dt&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.dl(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;dl&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.dlAttr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;dl&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.div(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;div&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.divAttr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;div&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.dfn(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;dfn&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.dfnAttr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;dfn&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.details(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;details&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.detailsAttr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;details&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.del(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;del&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.delAttr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;del&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.dd(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;dd&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.ddAttr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;dd&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.datalist(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;datalist&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.datalistAttr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;datalist&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.command(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;command&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.commandAttr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;command&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.colgroup(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;colgroup&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.colgroupAttr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;colgroup&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.col(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;col&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.colAttr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;col&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.code(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;code&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.codeAttr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;code&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.cite(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;cite&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.citeAttr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;cite&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.caption(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;caption&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.captionAttr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;caption&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.canvas(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;canvas&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.canvasAttr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;canvas&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.button(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;button&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.buttonAttr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;button&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.br(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;br&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.brAttr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;br&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.body(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;body&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.bodyAttr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;body&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.blockquote(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;blockquote&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.blockquoteAttr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;blockquote&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.bdo(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;bdo&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.bdoAttr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;bdo&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.bdi(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;bdi&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.bdiAttr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;bdi&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.base(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;base&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.baseAttr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;base&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.b(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;b&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.bAttr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;b&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.audio(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;audio&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.audioAttr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;audio&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.aside(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;aside&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.asideAttr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;aside&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.article(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;article&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.articleAttr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;article&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.area(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;area&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.areaAttr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;area&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.address(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;address&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.addressAttr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;address&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.abbr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;abbr&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.abbrAttr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;abbr&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.a(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;a&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.aAttr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;a&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.client``1(Microsoft.FSharp.Quotations.FSharpExpr{``0})">
<summary>
 Insert a client-side Doc.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.textView(WebSharper.UI.Next.View{System.String})">
<summary>
 Create a text node with dynamic content.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.text(System.String)">
<summary>
 Create a text node with constant content.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.z(System.String)">
<summary>
 Create an SVG attribute &quot;z&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.yChannelSelector(System.String)">
<summary>
 Create an SVG attribute &quot;yChannelSelector&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.y2(System.String)">
<summary>
 Create an SVG attribute &quot;y2&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.y1(System.String)">
<summary>
 Create an SVG attribute &quot;y1&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.y(System.String)">
<summary>
 Create an SVG attribute &quot;y&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.xChannelSelector(System.String)">
<summary>
 Create an SVG attribute &quot;xChannelSelector&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.x2(System.String)">
<summary>
 Create an SVG attribute &quot;x2&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.x1(System.String)">
<summary>
 Create an SVG attribute &quot;x1&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.x(System.String)">
<summary>
 Create an SVG attribute &quot;x&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.writingMode(System.String)">
<summary>
 Create an SVG attribute &quot;writing-mode&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.wordSpacing(System.String)">
<summary>
 Create an SVG attribute &quot;word-spacing&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.width(System.String)">
<summary>
 Create an SVG attribute &quot;width&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.visibility(System.String)">
<summary>
 Create an SVG attribute &quot;visibility&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.viewBox(System.String)">
<summary>
 Create an SVG attribute &quot;viewBox&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.values(System.String)">
<summary>
 Create an SVG attribute &quot;values&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.type(System.String)">
<summary>
 Create an SVG attribute &quot;type&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.transform(System.String)">
<summary>
 Create an SVG attribute &quot;transform&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.to(System.String)">
<summary>
 Create an SVG attribute &quot;to&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.textRendering(System.String)">
<summary>
 Create an SVG attribute &quot;text-rendering&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.textDecoration(System.String)">
<summary>
 Create an SVG attribute &quot;text-decoration&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.textAnchor(System.String)">
<summary>
 Create an SVG attribute &quot;text-anchor&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.targetY(System.String)">
<summary>
 Create an SVG attribute &quot;targetY&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.targetX(System.String)">
<summary>
 Create an SVG attribute &quot;targetX&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.surfaceScale(System.String)">
<summary>
 Create an SVG attribute &quot;surfaceScale&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.style(System.String)">
<summary>
 Create an SVG attribute &quot;style&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.strokeWidth(System.String)">
<summary>
 Create an SVG attribute &quot;stroke-width&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.strokeOpacity(System.String)">
<summary>
 Create an SVG attribute &quot;stroke-opacity&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.strokeMiterlimit(System.String)">
<summary>
 Create an SVG attribute &quot;stroke-miterlimit&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.strokeLinejoin(System.String)">
<summary>
 Create an SVG attribute &quot;stroke-linejoin&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.strokeLinecap(System.String)">
<summary>
 Create an SVG attribute &quot;stroke-linecap&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.strokeDashoffset(System.String)">
<summary>
 Create an SVG attribute &quot;stroke-dashoffset&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.strokeDasharray(System.String)">
<summary>
 Create an SVG attribute &quot;stroke-dasharray&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.stroke(System.String)">
<summary>
 Create an SVG attribute &quot;stroke&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.stopOpacity(System.String)">
<summary>
 Create an SVG attribute &quot;stop-opacity&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.stopColor(System.String)">
<summary>
 Create an SVG attribute &quot;stop-color&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.stitchTiles(System.String)">
<summary>
 Create an SVG attribute &quot;stitchTiles&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.stdDeviation(System.String)">
<summary>
 Create an SVG attribute &quot;stdDeviation&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.specularExponent(System.String)">
<summary>
 Create an SVG attribute &quot;specularExponent&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.specularConstant(System.String)">
<summary>
 Create an SVG attribute &quot;specularConstant&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.shapeRendering(System.String)">
<summary>
 Create an SVG attribute &quot;shape-rendering&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.seed(System.String)">
<summary>
 Create an SVG attribute &quot;seed&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.scale(System.String)">
<summary>
 Create an SVG attribute &quot;scale&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.ry(System.String)">
<summary>
 Create an SVG attribute &quot;ry&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.rx(System.String)">
<summary>
 Create an SVG attribute &quot;rx&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.result(System.String)">
<summary>
 Create an SVG attribute &quot;result&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.restart(System.String)">
<summary>
 Create an SVG attribute &quot;restart&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.requiredFeatures(System.String)">
<summary>
 Create an SVG attribute &quot;requiredFeatures&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.repeatDur(System.String)">
<summary>
 Create an SVG attribute &quot;repeatDur&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.repeatCount(System.String)">
<summary>
 Create an SVG attribute &quot;repeatCount&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.radius(System.String)">
<summary>
 Create an SVG attribute &quot;radius&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.r(System.String)">
<summary>
 Create an SVG attribute &quot;r&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.primitiveUnits(System.String)">
<summary>
 Create an SVG attribute &quot;primitiveUnits&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.preserveAspectRatio(System.String)">
<summary>
 Create an SVG attribute &quot;preserveAspectRatio&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.preserveAlpha(System.String)">
<summary>
 Create an SVG attribute &quot;preserveAlpha&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.pointsAtZ(System.String)">
<summary>
 Create an SVG attribute &quot;pointsAtZ&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.pointsAtY(System.String)">
<summary>
 Create an SVG attribute &quot;pointsAtY&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.pointsAtX(System.String)">
<summary>
 Create an SVG attribute &quot;pointsAtX&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.points(System.String)">
<summary>
 Create an SVG attribute &quot;points&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.pointerEvents(System.String)">
<summary>
 Create an SVG attribute &quot;pointer-events&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.patternUnits(System.String)">
<summary>
 Create an SVG attribute &quot;patternUnits&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.patternTransform(System.String)">
<summary>
 Create an SVG attribute &quot;patternTransform&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.patternContentUnits(System.String)">
<summary>
 Create an SVG attribute &quot;patternContentUnits&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.pathLength(System.String)">
<summary>
 Create an SVG attribute &quot;pathLength&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.paintOrder(System.String)">
<summary>
 Create an SVG attribute &quot;paint-order&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.overflow(System.String)">
<summary>
 Create an SVG attribute &quot;overflow&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.order(System.String)">
<summary>
 Create an SVG attribute &quot;order&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.operator(System.String)">
<summary>
 Create an SVG attribute &quot;operator&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.opacity(System.String)">
<summary>
 Create an SVG attribute &quot;opacity&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.numOctaves(System.String)">
<summary>
 Create an SVG attribute &quot;numOctaves&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.mode(System.String)">
<summary>
 Create an SVG attribute &quot;mode&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.min(System.String)">
<summary>
 Create an SVG attribute &quot;min&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.max(System.String)">
<summary>
 Create an SVG attribute &quot;max&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.maskUnits(System.String)">
<summary>
 Create an SVG attribute &quot;maskUnits&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.maskContentUnits(System.String)">
<summary>
 Create an SVG attribute &quot;maskContentUnits&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.mask(System.String)">
<summary>
 Create an SVG attribute &quot;mask&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.markerWidth(System.String)">
<summary>
 Create an SVG attribute &quot;markerWidth&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.markerUnits(System.String)">
<summary>
 Create an SVG attribute &quot;markerUnits&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.markerStart(System.String)">
<summary>
 Create an SVG attribute &quot;marker-start&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.markerMid(System.String)">
<summary>
 Create an SVG attribute &quot;marker-mid&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.markerHeight(System.String)">
<summary>
 Create an SVG attribute &quot;markerHeight&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.markerEnd(System.String)">
<summary>
 Create an SVG attribute &quot;marker-end&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.local(System.String)">
<summary>
 Create an SVG attribute &quot;local&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.limitingConeAngle(System.String)">
<summary>
 Create an SVG attribute &quot;limitingConeAngle&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.lightingColor(System.String)">
<summary>
 Create an SVG attribute &quot;lighting-color&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.letterSpacing(System.String)">
<summary>
 Create an SVG attribute &quot;letter-spacing&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.keyTimes(System.String)">
<summary>
 Create an SVG attribute &quot;keyTimes&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.keySplines(System.String)">
<summary>
 Create an SVG attribute &quot;keySplines&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.kerning(System.String)">
<summary>
 Create an SVG attribute &quot;kerning&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.kernelUnitLength(System.String)">
<summary>
 Create an SVG attribute &quot;kernelUnitLength&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.kernelMatrix(System.String)">
<summary>
 Create an SVG attribute &quot;kernelMatrix&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.k4(System.String)">
<summary>
 Create an SVG attribute &quot;k4&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.k3(System.String)">
<summary>
 Create an SVG attribute &quot;k3&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.k2(System.String)">
<summary>
 Create an SVG attribute &quot;k2&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.k1(System.String)">
<summary>
 Create an SVG attribute &quot;k1&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.in2(System.String)">
<summary>
 Create an SVG attribute &quot;in2&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.in(System.String)">
<summary>
 Create an SVG attribute &quot;in&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.imageRendering(System.String)">
<summary>
 Create an SVG attribute &quot;image-rendering&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.height(System.String)">
<summary>
 Create an SVG attribute &quot;height&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.gradientUnits(System.String)">
<summary>
 Create an SVG attribute &quot;gradientUnits&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.gradientTransform(System.String)">
<summary>
 Create an SVG attribute &quot;gradientTransform&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.from(System.String)">
<summary>
 Create an SVG attribute &quot;from&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.fontWeight(System.String)">
<summary>
 Create an SVG attribute &quot;font-weight&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.fontVariant(System.String)">
<summary>
 Create an SVG attribute &quot;font-variant&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.fontStyle(System.String)">
<summary>
 Create an SVG attribute &quot;font-style&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.fontStretch(System.String)">
<summary>
 Create an SVG attribute &quot;font-stretch&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.fontSizeAdjust(System.String)">
<summary>
 Create an SVG attribute &quot;font-size-adjust&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.fontSize(System.String)">
<summary>
 Create an SVG attribute &quot;font-size&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.fontFamily(System.String)">
<summary>
 Create an SVG attribute &quot;font-family&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.floodOpacity(System.String)">
<summary>
 Create an SVG attribute &quot;flood-opacity&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.floodColor(System.String)">
<summary>
 Create an SVG attribute &quot;flood-color&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.filterUnits(System.String)">
<summary>
 Create an SVG attribute &quot;filterUnits&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.filterRes(System.String)">
<summary>
 Create an SVG attribute &quot;filterRes&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.filter(System.String)">
<summary>
 Create an SVG attribute &quot;filter&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.fillRule(System.String)">
<summary>
 Create an SVG attribute &quot;fill-rule&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.fillOpacity(System.String)">
<summary>
 Create an SVG attribute &quot;fill-opacity&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.fill(System.String)">
<summary>
 Create an SVG attribute &quot;fill&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.externalResourcesRequired(System.String)">
<summary>
 Create an SVG attribute &quot;externalResourcesRequired&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.end(System.String)">
<summary>
 Create an SVG attribute &quot;end&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.elevation(System.String)">
<summary>
 Create an SVG attribute &quot;elevation&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.edgeMode(System.String)">
<summary>
 Create an SVG attribute &quot;edgeMode&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.dy(System.String)">
<summary>
 Create an SVG attribute &quot;dy&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.dx(System.String)">
<summary>
 Create an SVG attribute &quot;dx&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.dur(System.String)">
<summary>
 Create an SVG attribute &quot;dur&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.dominantBaseline(System.String)">
<summary>
 Create an SVG attribute &quot;dominant-baseline&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.divisor(System.String)">
<summary>
 Create an SVG attribute &quot;divisor&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.display(System.String)">
<summary>
 Create an SVG attribute &quot;display&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.direction(System.String)">
<summary>
 Create an SVG attribute &quot;direction&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.diffuseConstant(System.String)">
<summary>
 Create an SVG attribute &quot;diffuseConstant&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.d(System.String)">
<summary>
 Create an SVG attribute &quot;d&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.cy(System.String)">
<summary>
 Create an SVG attribute &quot;cy&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.cx(System.String)">
<summary>
 Create an SVG attribute &quot;cx&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.cursor(System.String)">
<summary>
 Create an SVG attribute &quot;cursor&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.contentStyleType(System.String)">
<summary>
 Create an SVG attribute &quot;contentStyleType&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.contentScriptType(System.String)">
<summary>
 Create an SVG attribute &quot;contentScriptType&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.colorRendering(System.String)">
<summary>
 Create an SVG attribute &quot;color-rendering&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.colorProfile(System.String)">
<summary>
 Create an SVG attribute &quot;color-profile&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.colorInterpolationFilters(System.String)">
<summary>
 Create an SVG attribute &quot;color-interpolation-filters&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.colorInterpolation(System.String)">
<summary>
 Create an SVG attribute &quot;color-interpolation&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.color(System.String)">
<summary>
 Create an SVG attribute &quot;color&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.clipRule(System.String)">
<summary>
 Create an SVG attribute &quot;clip-rule&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.clipPathUnits(System.String)">
<summary>
 Create an SVG attribute &quot;clipPathUnits&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.clipPath(System.String)">
<summary>
 Create an SVG attribute &quot;clip-path&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.clip(System.String)">
<summary>
 Create an SVG attribute &quot;clip&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.class(System.String)">
<summary>
 Create an SVG attribute &quot;class&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.calcMode(System.String)">
<summary>
 Create an SVG attribute &quot;calcMode&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.bias(System.String)">
<summary>
 Create an SVG attribute &quot;bias&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.begin(System.String)">
<summary>
 Create an SVG attribute &quot;begin&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.baselineShift(System.String)">
<summary>
 Create an SVG attribute &quot;baseline-shift&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.baseFrequency(System.String)">
<summary>
 Create an SVG attribute &quot;baseFrequency&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.azimuth(System.String)">
<summary>
 Create an SVG attribute &quot;azimuth&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.attributeType(System.String)">
<summary>
 Create an SVG attribute &quot;attributeType&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.attributeName(System.String)">
<summary>
 Create an SVG attribute &quot;attributeName&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.ascent(System.String)">
<summary>
 Create an SVG attribute &quot;ascent&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.alignmentBaseline(System.String)">
<summary>
 Create an SVG attribute &quot;alignment-baseline&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.additive(System.String)">
<summary>
 Create an SVG attribute &quot;additive&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.accumulate(System.String)">
<summary>
 Create an SVG attribute &quot;accumulate&quot; with the given value.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgAttributes.accentHeight(System.String)">
<summary>
 Create an SVG attribute &quot;accent-height&quot; with the given value.
</summary>
</member>
<member name="T:WebSharper.UI.Next.Html.SvgAttributes">
<summary>
 SVG attributes.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgElements.vkern(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an SVG element &lt;vkern&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgElements.view(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an SVG element &lt;view&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgElements.use(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an SVG element &lt;use&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgElements.tspan(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an SVG element &lt;tspan&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgElements.tref(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an SVG element &lt;tref&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgElements.title(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an SVG element &lt;title&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgElements.textpath(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an SVG element &lt;textpath&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgElements.text(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an SVG element &lt;text&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgElements.symbol(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an SVG element &lt;symbol&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgElements.switch(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an SVG element &lt;switch&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgElements.svg(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an SVG element &lt;svg&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgElements.style(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an SVG element &lt;style&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgElements.stop(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an SVG element &lt;stop&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgElements.set(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an SVG element &lt;set&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgElements.script(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an SVG element &lt;script&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgElements.rect(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an SVG element &lt;rect&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgElements.radialgradient(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an SVG element &lt;radialgradient&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgElements.polyline(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an SVG element &lt;polyline&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgElements.polygon(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an SVG element &lt;polygon&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgElements.pattern(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an SVG element &lt;pattern&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgElements.path(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an SVG element &lt;path&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgElements.mpath(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an SVG element &lt;mpath&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgElements.missingGlyph(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an SVG element &lt;missing-glyph&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgElements.metadata(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an SVG element &lt;metadata&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgElements.mask(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an SVG element &lt;mask&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgElements.marker(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an SVG element &lt;marker&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgElements.lineargradient(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an SVG element &lt;lineargradient&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgElements.line(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an SVG element &lt;line&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgElements.image(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an SVG element &lt;image&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgElements.hkern(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an SVG element &lt;hkern&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgElements.glyphref(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an SVG element &lt;glyphref&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgElements.glyph(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an SVG element &lt;glyph&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgElements.g(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an SVG element &lt;g&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgElements.foreignobject(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an SVG element &lt;foreignobject&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgElements.fontFaceUri(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an SVG element &lt;font-face-uri&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgElements.fontFaceSrc(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an SVG element &lt;font-face-src&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgElements.fontFaceName(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an SVG element &lt;font-face-name&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgElements.fontFaceFormat(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an SVG element &lt;font-face-format&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgElements.fontFace(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an SVG element &lt;font-face&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgElements.font(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an SVG element &lt;font&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgElements.filter(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an SVG element &lt;filter&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgElements.feturbulence(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an SVG element &lt;feturbulence&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgElements.fetile(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an SVG element &lt;fetile&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgElements.fespotlight(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an SVG element &lt;fespotlight&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgElements.fespecularlighting(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an SVG element &lt;fespecularlighting&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgElements.fepointlight(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an SVG element &lt;fepointlight&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgElements.feoffset(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an SVG element &lt;feoffset&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgElements.femorphology(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an SVG element &lt;femorphology&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgElements.femergenode(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an SVG element &lt;femergenode&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgElements.femerge(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an SVG element &lt;femerge&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgElements.feimage(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an SVG element &lt;feimage&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgElements.fegaussianblur(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an SVG element &lt;fegaussianblur&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgElements.fefuncr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an SVG element &lt;fefuncr&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgElements.fefuncg(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an SVG element &lt;fefuncg&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgElements.fefuncb(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an SVG element &lt;fefuncb&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgElements.fefunca(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an SVG element &lt;fefunca&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgElements.feflood(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an SVG element &lt;feflood&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgElements.fedistantlight(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an SVG element &lt;fedistantlight&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgElements.fedisplacementmap(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an SVG element &lt;fedisplacementmap&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgElements.fediffuselighting(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an SVG element &lt;fediffuselighting&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgElements.feconvolvematrix(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an SVG element &lt;feconvolvematrix&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgElements.fecomposite(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an SVG element &lt;fecomposite&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgElements.fecomponenttransfer(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an SVG element &lt;fecomponenttransfer&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgElements.fecolormatrix(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an SVG element &lt;fecolormatrix&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgElements.feblend(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an SVG element &lt;feblend&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgElements.ellipse(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an SVG element &lt;ellipse&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgElements.desc(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an SVG element &lt;desc&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgElements.defs(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an SVG element &lt;defs&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgElements.cursor(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an SVG element &lt;cursor&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgElements.colorProfile(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an SVG element &lt;color-profile&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgElements.clippath(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an SVG element &lt;clippath&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgElements.circle(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an SVG element &lt;circle&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgElements.animatetransform(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an SVG element &lt;animatetransform&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgElements.animatemotion(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an SVG element &lt;animatemotion&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgElements.animatecolor(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an SVG element &lt;animatecolor&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgElements.animate(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an SVG element &lt;animate&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgElements.altglyphitem(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an SVG element &lt;altglyphitem&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgElements.altglyphdef(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an SVG element &lt;altglyphdef&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgElements.altglyph(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an SVG element &lt;altglyph&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.SvgElements.a(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an SVG element &lt;a&gt; with attributes and children.
</summary>
</member>
<member name="T:WebSharper.UI.Next.Html.SvgElements">
<summary>
 SVG elements.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.Tags.var(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;var&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.Tags.varAttr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;var&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.Tags.u(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;u&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.Tags.uAttr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;u&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.Tags.tt(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;tt&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.Tags.ttAttr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;tt&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.Tags.title(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;title&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.Tags.titleAttr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;title&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.Tags.template(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;template&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.Tags.templateAttr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;template&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.Tags.style(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;style&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.Tags.styleAttr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;style&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.Tags.strike(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;strike&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.Tags.strikeAttr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;strike&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.Tags.s(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;s&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.Tags.sAttr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;s&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.Tags.option(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;option&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.Tags.optionAttr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;option&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.Tags.object(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;object&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.Tags.objectAttr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;object&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.Tags.menuitem(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;menuitem&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.Tags.menuitemAttr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;menuitem&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.Tags.menu(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;menu&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.Tags.menuAttr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;menu&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.Tags.map(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;map&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.Tags.mapAttr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;map&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.Tags.main(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;main&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.Tags.mainAttr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;main&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.Tags.isindex(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;isindex&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.Tags.isindexAttr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;isindex&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.Tags.frameset(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;frameset&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.Tags.framesetAttr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;frameset&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.Tags.frame(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;frame&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.Tags.frameAttr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;frame&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.Tags.font(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;font&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.Tags.fontAttr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;font&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.Tags.dir(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;dir&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.Tags.dirAttr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;dir&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.Tags.data(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;data&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.Tags.dataAttr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;data&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.Tags.content(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;content&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.Tags.contentAttr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;content&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.Tags.center(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;center&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.Tags.centerAttr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;center&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.Tags.big(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;big&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.Tags.bigAttr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;big&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.Tags.basefont(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;basefont&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.Tags.basefontAttr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;basefont&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.Tags.applet(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;applet&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.Tags.appletAttr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;applet&gt; with attributes and children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.Tags.acronym(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;acronym&gt; with children.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Html.Tags.acronymAttr(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Attr},System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Doc})">
<summary>
 Create an HTML element &lt;acronym&gt; with attributes and children.
</summary>
</member>
<member name="T:WebSharper.UI.Next.Html.Tags">
<summary>
 HTML5 element functions.
</summary>
</member>
<member name="T:WebSharper.UI.Next.Html">
<summary>
 This is an auto-generated module providing HTML5 vocabulary.
 Generated using tags.csv from WebSharper;
 See tools/UpdateElems.fsx for the code-generation logic.
</summary>
</member>
<member name="P:WebSharper.UI.Next.Input.Keyboard.LastPressed">
<summary>
 The last pressed key
</summary>
</member>
<member name="P:WebSharper.UI.Next.Input.Keyboard.KeysPressed">
<summary>
 A list of all currently-pressed keys
</summary>
</member>
<member name="M:WebSharper.UI.Next.Input.Keyboard.IsPressed(System.Int32)">
<summary>
 True if the given key is pressed
</summary>
</member>
<member name="P:WebSharper.UI.Next.Input.Mouse.RightPressed">
<summary>
 True if the right button is pressed
</summary>
</member>
<member name="P:WebSharper.UI.Next.Input.Mouse.Position">
<summary>
 Current mouse position
</summary>
</member>
<member name="P:WebSharper.UI.Next.Input.Mouse.MousePressed">
<summary>
 True if any mouse button is pressed
</summary>
</member>
<member name="P:WebSharper.UI.Next.Input.Mouse.MiddlePressed">
<summary>
 True if the right button is pressed
</summary>
</member>
<member name="P:WebSharper.UI.Next.Input.Mouse.LeftPressed">
<summary>
 True if the left button is pressed
</summary>
</member>
<member name="M:WebSharper.UI.Next.Notation.op_LessMultiplyGreater``2(WebSharper.UI.Next.View{Microsoft.FSharp.Core.FSharpFunc{``0,``1}},WebSharper.UI.Next.View{``0})">
<summary>
 Shorthand for View.Apply
</summary>
</member>
<member name="M:WebSharper.UI.Next.Notation.op_GreaterGreaterEquals``2(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,WebSharper.UI.Next.View{``1}})">
<summary>
 Shorthand for View.Bind.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Notation.op_BarGreaterGreater``2(WebSharper.UI.Next.View{``0},Microsoft.FSharp.Core.FSharpFunc{``0,``1})">
<summary>
 Shorthand for View.Map.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Notation.op_LessTwiddle``2(``0,Microsoft.FSharp.Core.FSharpFunc{``1,``1})">
<summary>
 Update value. Equivalent to o.Value &lt;- fn o.Value
</summary>
</member>
<member name="M:WebSharper.UI.Next.Notation.op_ColonEquals``2(``0,``1)">
<summary>
 Set value. Equivalent to o.Value &lt;- v
</summary>
</member>
<member name="M:WebSharper.UI.Next.Notation.op_Dereference``2(``0)">
<summary>
 Get value. Equivalent to o.Value.
</summary>
</member>
<member name="T:WebSharper.UI.Next.Notation">
<summary>
 A module with symbolic notation for common operations.
 To use in your project, open this module.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Server.Content.Page``1(WebSharper.UI.Next.Doc)">
<summary>
 Converts a `Doc` to a sitelet Page.
 `Doc` values that correspond to HTML fragements are converted to full documents.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Server.Content.Doc``1(WebSharper.UI.Next.Doc)">
<summary>
 Converts a `Doc` to a sitelet Page.
 `Doc` values that correspond to HTML fragements are converted to full documents.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Server.Doc.WebControl(WebSharper.Web.INode)">
<summary>
 Converts a WebSharper INode to a Doc.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Snap.IsObsolete``1(WebSharper.UI.Next.Snap{``0})">
<summary>
 Checks if the snap is obsolete.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Snap.When``1(WebSharper.UI.Next.Snap{``0},Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit},Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})">
<summary>
 Updates the second value while the first view is true
 Schedule callbacks on lifecycle events.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Snap.SnapshotOn``2(WebSharper.UI.Next.Snap{``0},WebSharper.UI.Next.Snap{``1})">
<summary>
 Snapshots when the first value changes
</summary>
</member>
<member name="M:WebSharper.UI.Next.Snap.MapAsync``2(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Control.FSharpAsync{``1}},WebSharper.UI.Next.Snap{``0})">
<summary>
 Maps an async function.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Snap.Map3``4(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.FSharpFunc{``2,``3}}},WebSharper.UI.Next.Snap{``0},WebSharper.UI.Next.Snap{``1},WebSharper.UI.Next.Snap{``2})">
<summary>
 Combines three snaps.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Snap.Map2``3(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,``2}},WebSharper.UI.Next.Snap{``0},WebSharper.UI.Next.Snap{``1})">
<summary>
 Combines two snaps.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Snap.Map``2(Microsoft.FSharp.Core.FSharpFunc{``0,``1},WebSharper.UI.Next.Snap{``0})">
<summary>
 Maps a function.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Snap.Sequence``1(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Snap{``0}})">
<summary>
 Evaluates each action in the sequence and collects the results
</summary>
</member>
<member name="M:WebSharper.UI.Next.Snap.Bind``2(Microsoft.FSharp.Core.FSharpFunc{``0,WebSharper.UI.Next.Snap{``1}},WebSharper.UI.Next.Snap{``0})">
<summary>
 Dynamic combination of snaps.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Snap.MarkObsolete``1(WebSharper.UI.Next.Snap{``0})">
<summary>
 Marks the snapshot as obsolete.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Snap.CreateWithValue``1(``0)">
<summary>
 Creates an snapshot with a given value; it will become obsolete later.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Snap.CreateForeverAsync``1(Microsoft.FSharp.Control.FSharpAsync{``0})">
<summary>
 Creates a snapshot initially in a waiting state, which starts the given
 asynchronous task and, upon completion, holds its returned value
 forever, never obsolete.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Snap.CreateForever``1(``0)">
<summary>
 Creates a snapshot that holds the given value forever, never obsolete.
</summary>
</member>
<member name="T:WebSharper.UI.Next.Snap">
<summary>
 Operations on snapshots.
</summary>
</member>
<member name="T:WebSharper.UI.Next.Trie.LookupResult`2">
<summary>
 Result of lookup function.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Trie.ToArray``2(WebSharper.UI.Next.Trie{``0,``1})">
<summary>
 Collects all values.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Trie.Mapi``3(Microsoft.FSharp.Core.FSharpFunc{System.Int32,Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Collections.FSharpList{``0},Microsoft.FSharp.Core.FSharpFunc{``1,``2}}},WebSharper.UI.Next.Trie{``0,``1})">
<summary>
 Map with an index.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Trie.Map``3(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Collections.FSharpList{``0},Microsoft.FSharp.Core.FSharpFunc{``1,``2}},WebSharper.UI.Next.Trie{``0,``1})">
<summary>
 Maps a function over a trie.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Trie.Prefix``2(``0,WebSharper.UI.Next.Trie{``0,``1})">
<summary>
 Prefixes a trie.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Trie.Merge``2(System.Collections.Generic.IEnumerable{WebSharper.UI.Next.Trie{``0,``1}})">
<summary>
 Merges tries. Failure to merge exists when leaves conflict
 with other leaves or else with prefixed tries.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Trie.Leaf``2(``0)">
<summary>
 Singleton &quot;here&quot; trie.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Trie.Empty``2">
<summary>
 Empty trie.
</summary>
</member>
<member name="M:WebSharper.UI.Next.Trie.Lookup``2(WebSharper.UI.Next.Trie{``0,``1},System.Collections.Generic.IEnumerable{``0})">
<summary>
 Looks up a value in the trie.
</summary>
</member>
<member name="T:WebSharper.UI.Next.Trie">
<summary>
 Trie combinators.
</summary>
</member>
</members>
</doc>
