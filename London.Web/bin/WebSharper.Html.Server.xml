<?xml version="1.0" encoding="utf-8"?>
<doc>
<assembly><name>WebSharper.Html.Server</name></assembly>
<members>
<member name="T:WebSharper.Html.Server.Html.Element">
<summary>
 Represents HTML/XML contents.
</summary>
</member>
<member name="T:WebSharper.Html.Server.Html.Attribute">
<summary>
 Represents HTML attributes.
</summary>
</member>
<member name="T:WebSharper.Html.Server.Html.TagContent">
<summary>
 Represents HTML tags.
</summary>
</member>
<member name="M:WebSharper.Html.Server.Html.Annotate(WebSharper.IRequiresResources,WebSharper.Html.Server.Html.Element)">
<summary>
 Sets an annotation on the element.
 If the element is a non-tag element, this operation is a no-op.
</summary>
</member>
<member name="M:WebSharper.Html.Server.Html.NewAttr(System.String,System.String)">
<summary>
 Constructs a new attribute value.
</summary>
</member>
<member name="M:WebSharper.Html.Server.Html.NewTag``1(System.String,System.Collections.Generic.IEnumerable{``0})">
<summary>
 Constructs a new HTML element.
</summary>
</member>
<member name="T:WebSharper.Html.Server.Html">
<summary>
 Provides types for expressing HTML values.
</summary>
</member>
<member name="T:WebSharper.Html.Server.Tags">
<summary>
 Exposes common HTML tags.
</summary>
</member>
<member name="M:WebSharper.Sitelets.Content.Template`1.With``2(System.String,System.Func{`0,Microsoft.FSharp.Control.FSharpAsync{``0}})">
 <summary>Adds an element-list-valued hole accessible in the
 template via the <c>data-hole="name"</c> attribute.</summary>
</member>
<member name="M:WebSharper.Sitelets.Content.Template`1.With``1(System.String,System.Func{`0,Microsoft.FSharp.Control.FSharpAsync{``0}})">
 <summary>Adds an element-valued hole accessible in the
 template via the <c>data-hole="name"</c> attribute.</summary>
</member>
<member name="M:WebSharper.Sitelets.Content.Template`1.With(System.String,System.Func{`0,Microsoft.FSharp.Control.FSharpAsync{System.String}})">
 <summary>Adds a text-valued hole accessible in the
 template as <c>${name}</c>.</summary>
</member>
<member name="M:WebSharper.Sitelets.Content.Template`1.With``2(System.String,System.Func{`0,``0})">
 <summary>Adds an element-list-valued hole accessible in the
 template via the <c>data-hole="name"</c> attribute.</summary>
</member>
<member name="M:WebSharper.Sitelets.Content.Template`1.With``1(System.String,System.Func{`0,``0})">
 <summary>Adds an element-valued hole accessible in the
 template via the <c>data-hole="name"</c> attribute.</summary>
</member>
<member name="M:WebSharper.Sitelets.Content.Template`1.With(System.String,System.Func{`0,System.String})">
 <summary>Adds a text-valued hole accessible in the
 template as <c>${name}</c>.</summary>
</member>
<member name="M:WebSharper.Sitelets.Content.Template`1.Run(`0,Microsoft.FSharp.Core.FSharpOption{System.String})">
<summary>
 Expands the template on a given value. Optionally pass the root folder.
</summary>
</member>
<member name="M:WebSharper.Sitelets.Content.Template`1.Compile(Microsoft.FSharp.Core.FSharpOption{System.String})">
<summary>
 Compiles the template as a simple template. Recommended to use before Run
 for early detection of errors. Optionally pass the root folder.
</summary>
</member>
<member name="M:WebSharper.Sitelets.Content.Template`1.#ctor(System.String,WebSharper.Sitelets.Content.Template.LoadFrequency)">
<summary>
 Constructs a new template from an XML file at a given path,
 also specifying the load frequency (defaults to WhenChanged).
</summary>
</member>
<member name="M:WebSharper.Sitelets.Content.Template`1.#ctor(System.String)">
<summary>
 Constructs a new template from an XML file at a given path.
</summary>
</member>
<member name="T:WebSharper.Sitelets.Content.Template`1">
 <summary>Defines a new page template.  Template files are parsed as XML
 and then analyzed for placeholders.  There are text placeholders
 <c>${foo}</c> that can appear inside text nodes and attributes, and
 node or node-list placeholders such as
 <c>&lt;div data-hole="bar"&gt;</c> or <c>&lt;div data-replace="bar"&gt;</c>.
 Node placeholder elements get completely replaced (data-replace),
 or get their contents replaced (data-hole) during expansion.
 This mechanism allows to populate placeholders with example
 content and validate templates as HTML5 during development.</summary>
</member>
<member name="T:WebSharper.Sitelets.Content.HtmlElement">
<summary>
 A type of HTML elements.
</summary>
</member>
<member name="M:WebSharper.Sitelets.Content.WithTemplate``2(WebSharper.Sitelets.Content.Template{``1},``1)">
<summary>
 Applies a template as a page template for sitelet content.
 Extra placeholders called &quot;scripts&quot;, &quot;styles&quot; and &quot;meta&quot; are available
 with WebSharper-determined dependencies. If only &quot;scripts&quot; is present,
 then it will be filled with meta, styles and scripts, in this order.
</summary>
</member>
<member name="M:WebSharper.Sitelets.Content.WithTemplateAsync``2(WebSharper.Sitelets.Content.Template{``1},Microsoft.FSharp.Control.FSharpAsync{``1})">
<summary>
 Asynchronously applies a template as a page template for sitelet content.
 Extra placeholders called &quot;scripts&quot;, &quot;styles&quot; and &quot;meta&quot; are available
 with WebSharper-determined dependencies. If only &quot;scripts&quot; is present,
 then it will be filled with meta, styles and scripts, in this order.
</summary>
</member>
<member name="T:WebSharper.Sitelets.Content.Template.LoadFrequency.WhenChanged">
<summary>
 Loading detects file changes and only happens
 when necessary, using System.IO.FileSystemWatcher
 to detect changes in the file system.
</summary>
</member>
<member name="T:WebSharper.Sitelets.Content.Template.LoadFrequency.PerRequest">
<summary>
 Loading happens once per every request, which
 is useful for development.
</summary>
</member>
<member name="T:WebSharper.Sitelets.Content.Template.LoadFrequency.Once">
<summary>
 Loading happens once per application start.
</summary>
</member>
<member name="T:WebSharper.Sitelets.Content.Template.LoadFrequency">
<summary>
 Defines how frequently a template should be loaded from disk.
</summary>
</member>
<member name="T:WebSharper.Sitelets.Content">
<summary>
 Sitelets Content functions for Html.Server.
</summary>
</member>
</members>
</doc>
